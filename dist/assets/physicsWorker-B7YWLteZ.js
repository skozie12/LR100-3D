(function(){"use strict";class ot{constructor(t){t===void 0&&(t=[0,0,0,0,0,0,0,0,0]),this.elements=t}identity(){const t=this.elements;t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1}setZero(){const t=this.elements;t[0]=0,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t[8]=0}setTrace(t){const e=this.elements;e[0]=t.x,e[4]=t.y,e[8]=t.z}getTrace(t){t===void 0&&(t=new c);const e=this.elements;return t.x=e[0],t.y=e[4],t.z=e[8],t}vmult(t,e){e===void 0&&(e=new c);const s=this.elements,n=t.x,i=t.y,o=t.z;return e.x=s[0]*n+s[1]*i+s[2]*o,e.y=s[3]*n+s[4]*i+s[5]*o,e.z=s[6]*n+s[7]*i+s[8]*o,e}smult(t){for(let e=0;e<this.elements.length;e++)this.elements[e]*=t}mmult(t,e){e===void 0&&(e=new ot);const s=this.elements,n=t.elements,i=e.elements,o=s[0],r=s[1],a=s[2],l=s[3],d=s[4],u=s[5],h=s[6],f=s[7],p=s[8],y=n[0],v=n[1],w=n[2],m=n[3],x=n[4],g=n[5],b=n[6],z=n[7],I=n[8];return i[0]=o*y+r*m+a*b,i[1]=o*v+r*x+a*z,i[2]=o*w+r*g+a*I,i[3]=l*y+d*m+u*b,i[4]=l*v+d*x+u*z,i[5]=l*w+d*g+u*I,i[6]=h*y+f*m+p*b,i[7]=h*v+f*x+p*z,i[8]=h*w+f*g+p*I,e}scale(t,e){e===void 0&&(e=new ot);const s=this.elements,n=e.elements;for(let i=0;i!==3;i++)n[3*i+0]=t.x*s[3*i+0],n[3*i+1]=t.y*s[3*i+1],n[3*i+2]=t.z*s[3*i+2];return e}solve(t,e){e===void 0&&(e=new c);const s=3,n=4,i=[];let o,r;for(o=0;o<s*n;o++)i.push(0);for(o=0;o<3;o++)for(r=0;r<3;r++)i[o+n*r]=this.elements[o+3*r];i[3+4*0]=t.x,i[3+4*1]=t.y,i[3+4*2]=t.z;let a=3;const l=a;let d;const u=4;let h;do{if(o=l-a,i[o+n*o]===0){for(r=o+1;r<l;r++)if(i[o+n*r]!==0){d=u;do h=u-d,i[h+n*o]+=i[h+n*r];while(--d);break}}if(i[o+n*o]!==0)for(r=o+1;r<l;r++){const f=i[o+n*r]/i[o+n*o];d=u;do h=u-d,i[h+n*r]=h<=o?0:i[h+n*r]-i[h+n*o]*f;while(--d)}}while(--a);if(e.z=i[2*n+3]/i[2*n+2],e.y=(i[1*n+3]-i[1*n+2]*e.z)/i[1*n+1],e.x=(i[0*n+3]-i[0*n+2]*e.z-i[0*n+1]*e.y)/i[0*n+0],isNaN(e.x)||isNaN(e.y)||isNaN(e.z)||e.x===1/0||e.y===1/0||e.z===1/0)throw`Could not solve equation! Got x=[${e.toString()}], b=[${t.toString()}], A=[${this.toString()}]`;return e}e(t,e,s){if(s===void 0)return this.elements[e+3*t];this.elements[e+3*t]=s}copy(t){for(let e=0;e<t.elements.length;e++)this.elements[e]=t.elements[e];return this}toString(){let t="";const e=",";for(let s=0;s<9;s++)t+=this.elements[s]+e;return t}reverse(t){t===void 0&&(t=new ot);const e=3,s=6,n=ts;let i,o;for(i=0;i<3;i++)for(o=0;o<3;o++)n[i+s*o]=this.elements[i+3*o];n[3+6*0]=1,n[3+6*1]=0,n[3+6*2]=0,n[4+6*0]=0,n[4+6*1]=1,n[4+6*2]=0,n[5+6*0]=0,n[5+6*1]=0,n[5+6*2]=1;let r=3;const a=r;let l;const d=s;let u;do{if(i=a-r,n[i+s*i]===0){for(o=i+1;o<a;o++)if(n[i+s*o]!==0){l=d;do u=d-l,n[u+s*i]+=n[u+s*o];while(--l);break}}if(n[i+s*i]!==0)for(o=i+1;o<a;o++){const h=n[i+s*o]/n[i+s*i];l=d;do u=d-l,n[u+s*o]=u<=i?0:n[u+s*o]-n[u+s*i]*h;while(--l)}}while(--r);i=2;do{o=i-1;do{const h=n[i+s*o]/n[i+s*i];l=s;do u=s-l,n[u+s*o]=n[u+s*o]-n[u+s*i]*h;while(--l)}while(o--)}while(--i);i=2;do{const h=1/n[i+s*i];l=s;do u=s-l,n[u+s*i]=n[u+s*i]*h;while(--l)}while(i--);i=2;do{o=2;do{if(u=n[e+o+s*i],isNaN(u)||u===1/0)throw`Could not reverse! A=[${this.toString()}]`;t.e(i,o,u)}while(o--)}while(i--);return t}setRotationFromQuaternion(t){const e=t.x,s=t.y,n=t.z,i=t.w,o=e+e,r=s+s,a=n+n,l=e*o,d=e*r,u=e*a,h=s*r,f=s*a,p=n*a,y=i*o,v=i*r,w=i*a,m=this.elements;return m[3*0+0]=1-(h+p),m[3*0+1]=d-w,m[3*0+2]=u+v,m[3*1+0]=d+w,m[3*1+1]=1-(l+p),m[3*1+2]=f-y,m[3*2+0]=u-v,m[3*2+1]=f+y,m[3*2+2]=1-(l+h),this}transpose(t){t===void 0&&(t=new ot);const e=this.elements,s=t.elements;let n;return s[0]=e[0],s[4]=e[4],s[8]=e[8],n=e[1],s[1]=e[3],s[3]=n,n=e[2],s[2]=e[6],s[6]=n,n=e[5],s[5]=e[7],s[7]=n,t}}const ts=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class c{constructor(t,e,s){t===void 0&&(t=0),e===void 0&&(e=0),s===void 0&&(s=0),this.x=t,this.y=e,this.z=s}cross(t,e){e===void 0&&(e=new c);const s=t.x,n=t.y,i=t.z,o=this.x,r=this.y,a=this.z;return e.x=r*i-a*n,e.y=a*s-o*i,e.z=o*n-r*s,e}set(t,e,s){return this.x=t,this.y=e,this.z=s,this}setZero(){this.x=this.y=this.z=0}vadd(t,e){if(e)e.x=t.x+this.x,e.y=t.y+this.y,e.z=t.z+this.z;else return new c(this.x+t.x,this.y+t.y,this.z+t.z)}vsub(t,e){if(e)e.x=this.x-t.x,e.y=this.y-t.y,e.z=this.z-t.z;else return new c(this.x-t.x,this.y-t.y,this.z-t.z)}crossmat(){return new ot([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const t=this.x,e=this.y,s=this.z,n=Math.sqrt(t*t+e*e+s*s);if(n>0){const i=1/n;this.x*=i,this.y*=i,this.z*=i}else this.x=0,this.y=0,this.z=0;return n}unit(t){t===void 0&&(t=new c);const e=this.x,s=this.y,n=this.z;let i=Math.sqrt(e*e+s*s+n*n);return i>0?(i=1/i,t.x=e*i,t.y=s*i,t.z=n*i):(t.x=1,t.y=0,t.z=0),t}length(){const t=this.x,e=this.y,s=this.z;return Math.sqrt(t*t+e*e+s*s)}lengthSquared(){return this.dot(this)}distanceTo(t){const e=this.x,s=this.y,n=this.z,i=t.x,o=t.y,r=t.z;return Math.sqrt((i-e)*(i-e)+(o-s)*(o-s)+(r-n)*(r-n))}distanceSquared(t){const e=this.x,s=this.y,n=this.z,i=t.x,o=t.y,r=t.z;return(i-e)*(i-e)+(o-s)*(o-s)+(r-n)*(r-n)}scale(t,e){e===void 0&&(e=new c);const s=this.x,n=this.y,i=this.z;return e.x=t*s,e.y=t*n,e.z=t*i,e}vmul(t,e){return e===void 0&&(e=new c),e.x=t.x*this.x,e.y=t.y*this.y,e.z=t.z*this.z,e}addScaledVector(t,e,s){return s===void 0&&(s=new c),s.x=this.x+t*e.x,s.y=this.y+t*e.y,s.z=this.z+t*e.z,s}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(t){return t===void 0&&(t=new c),t.x=-this.x,t.y=-this.y,t.z=-this.z,t}tangents(t,e){const s=this.length();if(s>0){const n=es,i=1/s;n.set(this.x*i,this.y*i,this.z*i);const o=ss;Math.abs(n.x)<.9?(o.set(1,0,0),n.cross(o,t)):(o.set(0,1,0),n.cross(o,t)),n.cross(t,e)}else t.set(1,0,0),e.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}lerp(t,e,s){const n=this.x,i=this.y,o=this.z;s.x=n+(t.x-n)*e,s.y=i+(t.y-i)*e,s.z=o+(t.z-o)*e}almostEquals(t,e){return e===void 0&&(e=1e-6),!(Math.abs(this.x-t.x)>e||Math.abs(this.y-t.y)>e||Math.abs(this.z-t.z)>e)}almostZero(t){return t===void 0&&(t=1e-6),!(Math.abs(this.x)>t||Math.abs(this.y)>t||Math.abs(this.z)>t)}isAntiparallelTo(t,e){return this.negate(me),me.almostEquals(t,e)}clone(){return new c(this.x,this.y,this.z)}}c.ZERO=new c(0,0,0),c.UNIT_X=new c(1,0,0),c.UNIT_Y=new c(0,1,0),c.UNIT_Z=new c(0,0,1);const es=new c,ss=new c,me=new c;class et{constructor(t){t===void 0&&(t={}),this.lowerBound=new c,this.upperBound=new c,t.lowerBound&&this.lowerBound.copy(t.lowerBound),t.upperBound&&this.upperBound.copy(t.upperBound)}setFromPoints(t,e,s,n){const i=this.lowerBound,o=this.upperBound,r=s;i.copy(t[0]),r&&r.vmult(i,i),o.copy(i);for(let a=1;a<t.length;a++){let l=t[a];r&&(r.vmult(l,ye),l=ye),l.x>o.x&&(o.x=l.x),l.x<i.x&&(i.x=l.x),l.y>o.y&&(o.y=l.y),l.y<i.y&&(i.y=l.y),l.z>o.z&&(o.z=l.z),l.z<i.z&&(i.z=l.z)}return e&&(e.vadd(i,i),e.vadd(o,o)),n&&(i.x-=n,i.y-=n,i.z-=n,o.x+=n,o.y+=n,o.z+=n),this}copy(t){return this.lowerBound.copy(t.lowerBound),this.upperBound.copy(t.upperBound),this}clone(){return new et().copy(this)}extend(t){this.lowerBound.x=Math.min(this.lowerBound.x,t.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,t.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,t.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,t.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,t.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,t.upperBound.z)}overlaps(t){const e=this.lowerBound,s=this.upperBound,n=t.lowerBound,i=t.upperBound,o=n.x<=s.x&&s.x<=i.x||e.x<=i.x&&i.x<=s.x,r=n.y<=s.y&&s.y<=i.y||e.y<=i.y&&i.y<=s.y,a=n.z<=s.z&&s.z<=i.z||e.z<=i.z&&i.z<=s.z;return o&&r&&a}volume(){const t=this.lowerBound,e=this.upperBound;return(e.x-t.x)*(e.y-t.y)*(e.z-t.z)}contains(t){const e=this.lowerBound,s=this.upperBound,n=t.lowerBound,i=t.upperBound;return e.x<=n.x&&s.x>=i.x&&e.y<=n.y&&s.y>=i.y&&e.z<=n.z&&s.z>=i.z}getCorners(t,e,s,n,i,o,r,a){const l=this.lowerBound,d=this.upperBound;t.copy(l),e.set(d.x,l.y,l.z),s.set(d.x,d.y,l.z),n.set(l.x,d.y,d.z),i.set(d.x,l.y,d.z),o.set(l.x,d.y,l.z),r.set(l.x,l.y,d.z),a.copy(d)}toLocalFrame(t,e){const s=ve,n=s[0],i=s[1],o=s[2],r=s[3],a=s[4],l=s[5],d=s[6],u=s[7];this.getCorners(n,i,o,r,a,l,d,u);for(let h=0;h!==8;h++){const f=s[h];t.pointToLocal(f,f)}return e.setFromPoints(s)}toWorldFrame(t,e){const s=ve,n=s[0],i=s[1],o=s[2],r=s[3],a=s[4],l=s[5],d=s[6],u=s[7];this.getCorners(n,i,o,r,a,l,d,u);for(let h=0;h!==8;h++){const f=s[h];t.pointToWorld(f,f)}return e.setFromPoints(s)}overlapsRay(t){const{direction:e,from:s}=t,n=1/e.x,i=1/e.y,o=1/e.z,r=(this.lowerBound.x-s.x)*n,a=(this.upperBound.x-s.x)*n,l=(this.lowerBound.y-s.y)*i,d=(this.upperBound.y-s.y)*i,u=(this.lowerBound.z-s.z)*o,h=(this.upperBound.z-s.z)*o,f=Math.max(Math.max(Math.min(r,a),Math.min(l,d)),Math.min(u,h)),p=Math.min(Math.min(Math.max(r,a),Math.max(l,d)),Math.max(u,h));return!(p<0||f>p)}}const ye=new c,ve=[new c,new c,new c,new c,new c,new c,new c,new c];class we{constructor(){this.matrix=[]}get(t,e){let{index:s}=t,{index:n}=e;if(n>s){const i=n;n=s,s=i}return this.matrix[(s*(s+1)>>1)+n-1]}set(t,e,s){let{index:n}=t,{index:i}=e;if(i>n){const o=i;i=n,n=o}this.matrix[(n*(n+1)>>1)+i-1]=s?1:0}reset(){for(let t=0,e=this.matrix.length;t!==e;t++)this.matrix[t]=0}setNumObjects(t){this.matrix.length=t*(t-1)>>1}}class xe{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const s=this._listeners;return s[t]===void 0&&(s[t]=[]),s[t].includes(e)||s[t].push(e),this}hasEventListener(t,e){if(this._listeners===void 0)return!1;const s=this._listeners;return!!(s[t]!==void 0&&s[t].includes(e))}hasAnyEventListener(t){return this._listeners===void 0?!1:this._listeners[t]!==void 0}removeEventListener(t,e){if(this._listeners===void 0)return this;const s=this._listeners;if(s[t]===void 0)return this;const n=s[t].indexOf(e);return n!==-1&&s[t].splice(n,1),this}dispatchEvent(t){if(this._listeners===void 0)return this;const s=this._listeners[t.type];if(s!==void 0){t.target=this;for(let n=0,i=s.length;n<i;n++)s[n].call(this,t)}return this}}class H{constructor(t,e,s,n){t===void 0&&(t=0),e===void 0&&(e=0),s===void 0&&(s=0),n===void 0&&(n=1),this.x=t,this.y=e,this.z=s,this.w=n}set(t,e,s,n){return this.x=t,this.y=e,this.z=s,this.w=n,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(t,e){const s=Math.sin(e*.5);return this.x=t.x*s,this.y=t.y*s,this.z=t.z*s,this.w=Math.cos(e*.5),this}toAxisAngle(t){t===void 0&&(t=new c),this.normalize();const e=2*Math.acos(this.w),s=Math.sqrt(1-this.w*this.w);return s<.001?(t.x=this.x,t.y=this.y,t.z=this.z):(t.x=this.x/s,t.y=this.y/s,t.z=this.z/s),[t,e]}setFromVectors(t,e){if(t.isAntiparallelTo(e)){const s=ns,n=is;t.tangents(s,n),this.setFromAxisAngle(s,Math.PI)}else{const s=t.cross(e);this.x=s.x,this.y=s.y,this.z=s.z,this.w=Math.sqrt(t.length()**2*e.length()**2)+t.dot(e),this.normalize()}return this}mult(t,e){e===void 0&&(e=new H);const s=this.x,n=this.y,i=this.z,o=this.w,r=t.x,a=t.y,l=t.z,d=t.w;return e.x=s*d+o*r+n*l-i*a,e.y=n*d+o*a+i*r-s*l,e.z=i*d+o*l+s*a-n*r,e.w=o*d-s*r-n*a-i*l,e}inverse(t){t===void 0&&(t=new H);const e=this.x,s=this.y,n=this.z,i=this.w;this.conjugate(t);const o=1/(e*e+s*s+n*n+i*i);return t.x*=o,t.y*=o,t.z*=o,t.w*=o,t}conjugate(t){return t===void 0&&(t=new H),t.x=-this.x,t.y=-this.y,t.z=-this.z,t.w=this.w,t}normalize(){let t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(t=1/t,this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}normalizeFast(){const t=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return t===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=t,this.y*=t,this.z*=t,this.w*=t),this}vmult(t,e){e===void 0&&(e=new c);const s=t.x,n=t.y,i=t.z,o=this.x,r=this.y,a=this.z,l=this.w,d=l*s+r*i-a*n,u=l*n+a*s-o*i,h=l*i+o*n-r*s,f=-o*s-r*n-a*i;return e.x=d*l+f*-o+u*-a-h*-r,e.y=u*l+f*-r+h*-o-d*-a,e.z=h*l+f*-a+d*-r-u*-o,e}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}toEuler(t,e){e===void 0&&(e="YZX");let s,n,i;const o=this.x,r=this.y,a=this.z,l=this.w;switch(e){case"YZX":const d=o*r+a*l;if(d>.499&&(s=2*Math.atan2(o,l),n=Math.PI/2,i=0),d<-.499&&(s=-2*Math.atan2(o,l),n=-Math.PI/2,i=0),s===void 0){const u=o*o,h=r*r,f=a*a;s=Math.atan2(2*r*l-2*o*a,1-2*h-2*f),n=Math.asin(2*d),i=Math.atan2(2*o*l-2*r*a,1-2*u-2*f)}break;default:throw new Error(`Euler order ${e} not supported yet.`)}t.y=s,t.z=n,t.x=i}setFromEuler(t,e,s,n){n===void 0&&(n="XYZ");const i=Math.cos(t/2),o=Math.cos(e/2),r=Math.cos(s/2),a=Math.sin(t/2),l=Math.sin(e/2),d=Math.sin(s/2);return n==="XYZ"?(this.x=a*o*r+i*l*d,this.y=i*l*r-a*o*d,this.z=i*o*d+a*l*r,this.w=i*o*r-a*l*d):n==="YXZ"?(this.x=a*o*r+i*l*d,this.y=i*l*r-a*o*d,this.z=i*o*d-a*l*r,this.w=i*o*r+a*l*d):n==="ZXY"?(this.x=a*o*r-i*l*d,this.y=i*l*r+a*o*d,this.z=i*o*d+a*l*r,this.w=i*o*r-a*l*d):n==="ZYX"?(this.x=a*o*r-i*l*d,this.y=i*l*r+a*o*d,this.z=i*o*d-a*l*r,this.w=i*o*r+a*l*d):n==="YZX"?(this.x=a*o*r+i*l*d,this.y=i*l*r+a*o*d,this.z=i*o*d-a*l*r,this.w=i*o*r-a*l*d):n==="XZY"&&(this.x=a*o*r-i*l*d,this.y=i*l*r-a*o*d,this.z=i*o*d+a*l*r,this.w=i*o*r+a*l*d),this}clone(){return new H(this.x,this.y,this.z,this.w)}slerp(t,e,s){s===void 0&&(s=new H);const n=this.x,i=this.y,o=this.z,r=this.w;let a=t.x,l=t.y,d=t.z,u=t.w,h,f,p,y,v;return f=n*a+i*l+o*d+r*u,f<0&&(f=-f,a=-a,l=-l,d=-d,u=-u),1-f>1e-6?(h=Math.acos(f),p=Math.sin(h),y=Math.sin((1-e)*h)/p,v=Math.sin(e*h)/p):(y=1-e,v=e),s.x=y*n+v*a,s.y=y*i+v*l,s.z=y*o+v*d,s.w=y*r+v*u,s}integrate(t,e,s,n){n===void 0&&(n=new H);const i=t.x*s.x,o=t.y*s.y,r=t.z*s.z,a=this.x,l=this.y,d=this.z,u=this.w,h=e*.5;return n.x+=h*(i*u+o*d-r*l),n.y+=h*(o*u+r*a-i*d),n.z+=h*(r*u+i*l-o*a),n.w+=h*(-i*a-o*l-r*d),n}}const ns=new c,is=new c,os={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class N{constructor(t){t===void 0&&(t={}),this.id=N.idCounter++,this.type=t.type||0,this.boundingSphereRadius=0,this.collisionResponse=t.collisionResponse?t.collisionResponse:!0,this.collisionFilterGroup=t.collisionFilterGroup!==void 0?t.collisionFilterGroup:1,this.collisionFilterMask=t.collisionFilterMask!==void 0?t.collisionFilterMask:-1,this.material=t.material?t.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(t,e){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(t,e,s,n){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}N.idCounter=0,N.types=os;class V{constructor(t){t===void 0&&(t={}),this.position=new c,this.quaternion=new H,t.position&&this.position.copy(t.position),t.quaternion&&this.quaternion.copy(t.quaternion)}pointToLocal(t,e){return V.pointToLocalFrame(this.position,this.quaternion,t,e)}pointToWorld(t,e){return V.pointToWorldFrame(this.position,this.quaternion,t,e)}vectorToWorldFrame(t,e){return e===void 0&&(e=new c),this.quaternion.vmult(t,e),e}static pointToLocalFrame(t,e,s,n){return n===void 0&&(n=new c),s.vsub(t,n),e.conjugate(ge),ge.vmult(n,n),n}static pointToWorldFrame(t,e,s,n){return n===void 0&&(n=new c),e.vmult(s,n),n.vadd(t,n),n}static vectorToWorldFrame(t,e,s){return s===void 0&&(s=new c),t.vmult(e,s),s}static vectorToLocalFrame(t,e,s,n){return n===void 0&&(n=new c),e.w*=-1,e.vmult(s,n),e.w*=-1,n}}const ge=new H;class Mt extends N{constructor(t){t===void 0&&(t={});const{vertices:e=[],faces:s=[],normals:n=[],axes:i,boundingSphereRadius:o}=t;super({type:N.types.CONVEXPOLYHEDRON}),this.vertices=e,this.faces=s,this.faceNormals=n,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=i?i.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const t=this.faces,e=this.vertices,s=this.uniqueEdges;s.length=0;const n=new c;for(let i=0;i!==t.length;i++){const o=t[i],r=o.length;for(let a=0;a!==r;a++){const l=(a+1)%r;e[o[a]].vsub(e[o[l]],n),n.normalize();let d=!1;for(let u=0;u!==s.length;u++)if(s[u].almostEquals(n)||s[u].almostEquals(n)){d=!0;break}d||s.push(n.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let t=0;t<this.faces.length;t++){for(let n=0;n<this.faces[t].length;n++)if(!this.vertices[this.faces[t][n]])throw new Error(`Vertex ${this.faces[t][n]} not found!`);const e=this.faceNormals[t]||new c;this.getFaceNormal(t,e),e.negate(e),this.faceNormals[t]=e;const s=this.vertices[this.faces[t][0]];if(e.dot(s)<0){console.error(`.faceNormals[${t}] = Vec3(${e.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let n=0;n<this.faces[t].length;n++)console.warn(`.vertices[${this.faces[t][n]}] = Vec3(${this.vertices[this.faces[t][n]].toString()})`)}}}getFaceNormal(t,e){const s=this.faces[t],n=this.vertices[s[0]],i=this.vertices[s[1]],o=this.vertices[s[2]];Mt.computeNormal(n,i,o,e)}static computeNormal(t,e,s,n){const i=new c,o=new c;e.vsub(t,o),s.vsub(e,i),i.cross(o,n),n.isZero()||n.normalize()}clipAgainstHull(t,e,s,n,i,o,r,a,l){const d=new c;let u=-1,h=-Number.MAX_VALUE;for(let p=0;p<s.faces.length;p++){d.copy(s.faceNormals[p]),i.vmult(d,d);const y=d.dot(o);y>h&&(h=y,u=p)}const f=[];for(let p=0;p<s.faces[u].length;p++){const y=s.vertices[s.faces[u][p]],v=new c;v.copy(y),i.vmult(v,v),n.vadd(v,v),f.push(v)}u>=0&&this.clipFaceAgainstHull(o,t,e,f,r,a,l)}findSeparatingAxis(t,e,s,n,i,o,r,a){const l=new c,d=new c,u=new c,h=new c,f=new c,p=new c;let y=Number.MAX_VALUE;const v=this;if(v.uniqueAxes)for(let w=0;w!==v.uniqueAxes.length;w++){s.vmult(v.uniqueAxes[w],l);const m=v.testSepAxis(l,t,e,s,n,i);if(m===!1)return!1;m<y&&(y=m,o.copy(l))}else{const w=r?r.length:v.faces.length;for(let m=0;m<w;m++){const x=r?r[m]:m;l.copy(v.faceNormals[x]),s.vmult(l,l);const g=v.testSepAxis(l,t,e,s,n,i);if(g===!1)return!1;g<y&&(y=g,o.copy(l))}}if(t.uniqueAxes)for(let w=0;w!==t.uniqueAxes.length;w++){i.vmult(t.uniqueAxes[w],d);const m=v.testSepAxis(d,t,e,s,n,i);if(m===!1)return!1;m<y&&(y=m,o.copy(d))}else{const w=a?a.length:t.faces.length;for(let m=0;m<w;m++){const x=a?a[m]:m;d.copy(t.faceNormals[x]),i.vmult(d,d);const g=v.testSepAxis(d,t,e,s,n,i);if(g===!1)return!1;g<y&&(y=g,o.copy(d))}}for(let w=0;w!==v.uniqueEdges.length;w++){s.vmult(v.uniqueEdges[w],h);for(let m=0;m!==t.uniqueEdges.length;m++)if(i.vmult(t.uniqueEdges[m],f),h.cross(f,p),!p.almostZero()){p.normalize();const x=v.testSepAxis(p,t,e,s,n,i);if(x===!1)return!1;x<y&&(y=x,o.copy(p))}}return n.vsub(e,u),u.dot(o)>0&&o.negate(o),!0}testSepAxis(t,e,s,n,i,o){const r=this;Mt.project(r,t,s,n,Jt),Mt.project(e,t,i,o,Qt);const a=Jt[0],l=Jt[1],d=Qt[0],u=Qt[1];if(a<u||d<l)return!1;const h=a-u,f=d-l;return h<f?h:f}calculateLocalInertia(t,e){const s=new c,n=new c;this.computeLocalAABB(n,s);const i=s.x-n.x,o=s.y-n.y,r=s.z-n.z;e.x=1/12*t*(2*o*2*o+2*r*2*r),e.y=1/12*t*(2*i*2*i+2*r*2*r),e.z=1/12*t*(2*o*2*o+2*i*2*i)}getPlaneConstantOfFace(t){const e=this.faces[t],s=this.faceNormals[t],n=this.vertices[e[0]];return-s.dot(n)}clipFaceAgainstHull(t,e,s,n,i,o,r){const a=new c,l=new c,d=new c,u=new c,h=new c,f=new c,p=new c,y=new c,v=this,w=[],m=n,x=w;let g=-1,b=Number.MAX_VALUE;for(let P=0;P<v.faces.length;P++){a.copy(v.faceNormals[P]),s.vmult(a,a);const q=a.dot(t);q<b&&(b=q,g=P)}if(g<0)return;const z=v.faces[g];z.connectedFaces=[];for(let P=0;P<v.faces.length;P++)for(let q=0;q<v.faces[P].length;q++)z.indexOf(v.faces[P][q])!==-1&&P!==g&&z.connectedFaces.indexOf(P)===-1&&z.connectedFaces.push(P);const I=z.length;for(let P=0;P<I;P++){const q=v.vertices[z[P]],O=v.vertices[z[(P+1)%I]];q.vsub(O,l),d.copy(l),s.vmult(d,d),e.vadd(d,d),u.copy(this.faceNormals[g]),s.vmult(u,u),e.vadd(u,u),d.cross(u,h),h.negate(h),f.copy(q),s.vmult(f,f),e.vadd(f,f);const E=z.connectedFaces[P];p.copy(this.faceNormals[E]);const T=this.getPlaneConstantOfFace(E);y.copy(p),s.vmult(y,y);const S=T-y.dot(e);for(this.clipFaceAgainstPlane(m,x,y,S);m.length;)m.shift();for(;x.length;)m.push(x.shift())}p.copy(this.faceNormals[g]);const F=this.getPlaneConstantOfFace(g);y.copy(p),s.vmult(y,y);const R=F-y.dot(e);for(let P=0;P<m.length;P++){let q=y.dot(m[P])+R;if(q<=i&&(console.log(`clamped: depth=${q} to minDist=${i}`),q=i),q<=o){const O=m[P];if(q<=1e-6){const E={point:O,normal:y,depth:q};r.push(E)}}}}clipFaceAgainstPlane(t,e,s,n){let i,o;const r=t.length;if(r<2)return e;let a=t[t.length-1],l=t[0];i=s.dot(a)+n;for(let d=0;d<r;d++){if(l=t[d],o=s.dot(l)+n,i<0)if(o<0){const u=new c;u.copy(l),e.push(u)}else{const u=new c;a.lerp(l,i/(i-o),u),e.push(u)}else if(o<0){const u=new c;a.lerp(l,i/(i-o),u),e.push(u),e.push(l)}a=l,i=o}return e}computeWorldVertices(t,e){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new c);const s=this.vertices,n=this.worldVertices;for(let i=0;i!==this.vertices.length;i++)e.vmult(s[i],n[i]),t.vadd(n[i],n[i]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(t,e){const s=this.vertices;t.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),e.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let n=0;n<this.vertices.length;n++){const i=s[n];i.x<t.x?t.x=i.x:i.x>e.x&&(e.x=i.x),i.y<t.y?t.y=i.y:i.y>e.y&&(e.y=i.y),i.z<t.z?t.z=i.z:i.z>e.z&&(e.z=i.z)}}computeWorldFaceNormals(t){const e=this.faceNormals.length;for(;this.worldFaceNormals.length<e;)this.worldFaceNormals.push(new c);const s=this.faceNormals,n=this.worldFaceNormals;for(let i=0;i!==e;i++)t.vmult(s[i],n[i]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let t=0;const e=this.vertices;for(let s=0;s!==e.length;s++){const n=e[s].lengthSquared();n>t&&(t=n)}this.boundingSphereRadius=Math.sqrt(t)}calculateWorldAABB(t,e,s,n){const i=this.vertices;let o,r,a,l,d,u,h=new c;for(let f=0;f<i.length;f++){h.copy(i[f]),e.vmult(h,h),t.vadd(h,h);const p=h;(o===void 0||p.x<o)&&(o=p.x),(l===void 0||p.x>l)&&(l=p.x),(r===void 0||p.y<r)&&(r=p.y),(d===void 0||p.y>d)&&(d=p.y),(a===void 0||p.z<a)&&(a=p.z),(u===void 0||p.z>u)&&(u=p.z)}s.set(o,r,a),n.set(l,d,u)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(t){t===void 0&&(t=new c);const e=this.vertices;for(let s=0;s<e.length;s++)t.vadd(e[s],t);return t.scale(1/e.length,t),t}transformAllPoints(t,e){const s=this.vertices.length,n=this.vertices;if(e){for(let i=0;i<s;i++){const o=n[i];e.vmult(o,o)}for(let i=0;i<this.faceNormals.length;i++){const o=this.faceNormals[i];e.vmult(o,o)}}if(t)for(let i=0;i<s;i++){const o=n[i];o.vadd(t,o)}}pointIsInside(t){const e=this.vertices,s=this.faces,n=this.faceNormals,i=new c;this.getAveragePointLocal(i);for(let o=0;o<this.faces.length;o++){let r=n[o];const a=e[s[o][0]],l=new c;t.vsub(a,l);const d=r.dot(l),u=new c;i.vsub(a,u);const h=r.dot(u);if(d<0&&h>0||d>0&&h<0)return!1}return-1}static project(t,e,s,n,i){const o=t.vertices.length,r=rs;let a=0,l=0;const d=cs,u=t.vertices;d.setZero(),V.vectorToLocalFrame(s,n,e,r),V.pointToLocalFrame(s,n,d,d);const h=d.dot(r);l=a=u[0].dot(r);for(let f=1;f<o;f++){const p=u[f].dot(r);p>a&&(a=p),p<l&&(l=p)}if(l-=h,a-=h,l>a){const f=l;l=a,a=f}i[0]=a,i[1]=l}}const Jt=[],Qt=[];new c;const rs=new c,cs=new c;class te extends N{constructor(t){super({type:N.types.BOX}),this.halfExtents=t,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const t=this.halfExtents.x,e=this.halfExtents.y,s=this.halfExtents.z,n=c,i=[new n(-t,-e,-s),new n(t,-e,-s),new n(t,e,-s),new n(-t,e,-s),new n(-t,-e,s),new n(t,-e,s),new n(t,e,s),new n(-t,e,s)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],r=[new n(0,0,1),new n(0,1,0),new n(1,0,0)],a=new Mt({vertices:i,faces:o,axes:r});this.convexPolyhedronRepresentation=a,a.material=this.material}calculateLocalInertia(t,e){return e===void 0&&(e=new c),te.calculateInertia(this.halfExtents,t,e),e}static calculateInertia(t,e,s){const n=t;s.x=1/12*e*(2*n.y*2*n.y+2*n.z*2*n.z),s.y=1/12*e*(2*n.x*2*n.x+2*n.z*2*n.z),s.z=1/12*e*(2*n.y*2*n.y+2*n.x*2*n.x)}getSideNormals(t,e){const s=t,n=this.halfExtents;if(s[0].set(n.x,0,0),s[1].set(0,n.y,0),s[2].set(0,0,n.z),s[3].set(-n.x,0,0),s[4].set(0,-n.y,0),s[5].set(0,0,-n.z),e!==void 0)for(let i=0;i!==s.length;i++)e.vmult(s[i],s[i]);return s}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(t,e,s){const n=this.halfExtents,i=[[n.x,n.y,n.z],[-n.x,n.y,n.z],[-n.x,-n.y,n.z],[-n.x,-n.y,-n.z],[n.x,-n.y,-n.z],[n.x,n.y,-n.z],[-n.x,n.y,-n.z],[n.x,-n.y,n.z]];for(let o=0;o<i.length;o++)xt.set(i[o][0],i[o][1],i[o][2]),e.vmult(xt,xt),t.vadd(xt,xt),s(xt.x,xt.y,xt.z)}calculateWorldAABB(t,e,s,n){const i=this.halfExtents;ct[0].set(i.x,i.y,i.z),ct[1].set(-i.x,i.y,i.z),ct[2].set(-i.x,-i.y,i.z),ct[3].set(-i.x,-i.y,-i.z),ct[4].set(i.x,-i.y,-i.z),ct[5].set(i.x,i.y,-i.z),ct[6].set(-i.x,i.y,-i.z),ct[7].set(i.x,-i.y,i.z);const o=ct[0];e.vmult(o,o),t.vadd(o,o),n.copy(o),s.copy(o);for(let r=1;r<8;r++){const a=ct[r];e.vmult(a,a),t.vadd(a,a);const l=a.x,d=a.y,u=a.z;l>n.x&&(n.x=l),d>n.y&&(n.y=d),u>n.z&&(n.z=u),l<s.x&&(s.x=l),d<s.y&&(s.y=d),u<s.z&&(s.z=u)}}}const xt=new c,ct=[new c,new c,new c,new c,new c,new c,new c,new c],U={DYNAMIC:1,STATIC:2,KINEMATIC:4},ee={AWAKE:0,SLEEPY:1,SLEEPING:2};class A extends xe{constructor(t){t===void 0&&(t={}),super(),this.id=A.idCounter++,this.index=-1,this.world=null,this.vlambda=new c,this.collisionFilterGroup=typeof t.collisionFilterGroup=="number"?t.collisionFilterGroup:1,this.collisionFilterMask=typeof t.collisionFilterMask=="number"?t.collisionFilterMask:-1,this.collisionResponse=typeof t.collisionResponse=="boolean"?t.collisionResponse:!0,this.position=new c,this.previousPosition=new c,this.interpolatedPosition=new c,this.initPosition=new c,t.position&&(this.position.copy(t.position),this.previousPosition.copy(t.position),this.interpolatedPosition.copy(t.position),this.initPosition.copy(t.position)),this.velocity=new c,t.velocity&&this.velocity.copy(t.velocity),this.initVelocity=new c,this.force=new c;const e=typeof t.mass=="number"?t.mass:0;this.mass=e,this.invMass=e>0?1/e:0,this.material=t.material||null,this.linearDamping=typeof t.linearDamping=="number"?t.linearDamping:.01,this.type=e<=0?A.STATIC:A.DYNAMIC,typeof t.type==typeof A.STATIC&&(this.type=t.type),this.allowSleep=typeof t.allowSleep<"u"?t.allowSleep:!0,this.sleepState=A.AWAKE,this.sleepSpeedLimit=typeof t.sleepSpeedLimit<"u"?t.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof t.sleepTimeLimit<"u"?t.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new c,this.quaternion=new H,this.initQuaternion=new H,this.previousQuaternion=new H,this.interpolatedQuaternion=new H,t.quaternion&&(this.quaternion.copy(t.quaternion),this.initQuaternion.copy(t.quaternion),this.previousQuaternion.copy(t.quaternion),this.interpolatedQuaternion.copy(t.quaternion)),this.angularVelocity=new c,t.angularVelocity&&this.angularVelocity.copy(t.angularVelocity),this.initAngularVelocity=new c,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new c,this.invInertia=new c,this.invInertiaWorld=new ot,this.invMassSolve=0,this.invInertiaSolve=new c,this.invInertiaWorldSolve=new ot,this.fixedRotation=typeof t.fixedRotation<"u"?t.fixedRotation:!1,this.angularDamping=typeof t.angularDamping<"u"?t.angularDamping:.01,this.linearFactor=new c(1,1,1),t.linearFactor&&this.linearFactor.copy(t.linearFactor),this.angularFactor=new c(1,1,1),t.angularFactor&&this.angularFactor.copy(t.angularFactor),this.aabb=new et,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new c,this.isTrigger=!!t.isTrigger,t.shape&&this.addShape(t.shape),this.updateMassProperties()}wakeUp(){const t=this.sleepState;this.sleepState=A.AWAKE,this.wakeUpAfterNarrowphase=!1,t===A.SLEEPING&&this.dispatchEvent(A.wakeupEvent)}sleep(){this.sleepState=A.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(t){if(this.allowSleep){const e=this.sleepState,s=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),n=this.sleepSpeedLimit**2;e===A.AWAKE&&s<n?(this.sleepState=A.SLEEPY,this.timeLastSleepy=t,this.dispatchEvent(A.sleepyEvent)):e===A.SLEEPY&&s>n?this.wakeUp():e===A.SLEEPY&&t-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(A.sleepEvent))}}updateSolveMassProperties(){this.sleepState===A.SLEEPING||this.type===A.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(t,e){return e===void 0&&(e=new c),t.vsub(this.position,e),this.quaternion.conjugate().vmult(e,e),e}vectorToLocalFrame(t,e){return e===void 0&&(e=new c),this.quaternion.conjugate().vmult(t,e),e}pointToWorldFrame(t,e){return e===void 0&&(e=new c),this.quaternion.vmult(t,e),e.vadd(this.position,e),e}vectorToWorldFrame(t,e){return e===void 0&&(e=new c),this.quaternion.vmult(t,e),e}addShape(t,e,s){const n=new c,i=new H;return e&&n.copy(e),s&&i.copy(s),this.shapes.push(t),this.shapeOffsets.push(n),this.shapeOrientations.push(i),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=this,this}removeShape(t){const e=this.shapes.indexOf(t);return e===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(e,1),this.shapeOffsets.splice(e,1),this.shapeOrientations.splice(e,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,t.body=null,this)}updateBoundingRadius(){const t=this.shapes,e=this.shapeOffsets,s=t.length;let n=0;for(let i=0;i!==s;i++){const o=t[i];o.updateBoundingSphereRadius();const r=e[i].length(),a=o.boundingSphereRadius;r+a>n&&(n=r+a)}this.boundingRadius=n}updateAABB(){const t=this.shapes,e=this.shapeOffsets,s=this.shapeOrientations,n=t.length,i=as,o=ls,r=this.quaternion,a=this.aabb,l=hs;for(let d=0;d!==n;d++){const u=t[d];r.vmult(e[d],i),i.vadd(this.position,i),r.mult(s[d],o),u.calculateWorldAABB(i,o,l.lowerBound,l.upperBound),d===0?a.copy(l):a.extend(l)}this.aabbNeedsUpdate=!1}updateInertiaWorld(t){const e=this.invInertia;if(!(e.x===e.y&&e.y===e.z&&!t)){const s=ds,n=us;s.setRotationFromQuaternion(this.quaternion),s.transpose(n),s.scale(e,s),s.mmult(n,this.invInertiaWorld)}}applyForce(t,e){if(e===void 0&&(e=new c),this.type!==A.DYNAMIC)return;this.sleepState===A.SLEEPING&&this.wakeUp();const s=ps;e.cross(t,s),this.force.vadd(t,this.force),this.torque.vadd(s,this.torque)}applyLocalForce(t,e){if(e===void 0&&(e=new c),this.type!==A.DYNAMIC)return;const s=fs,n=ms;this.vectorToWorldFrame(t,s),this.vectorToWorldFrame(e,n),this.applyForce(s,n)}applyTorque(t){this.type===A.DYNAMIC&&(this.sleepState===A.SLEEPING&&this.wakeUp(),this.torque.vadd(t,this.torque))}applyImpulse(t,e){if(e===void 0&&(e=new c),this.type!==A.DYNAMIC)return;this.sleepState===A.SLEEPING&&this.wakeUp();const s=e,n=ys;n.copy(t),n.scale(this.invMass,n),this.velocity.vadd(n,this.velocity);const i=vs;s.cross(t,i),this.invInertiaWorld.vmult(i,i),this.angularVelocity.vadd(i,this.angularVelocity)}applyLocalImpulse(t,e){if(e===void 0&&(e=new c),this.type!==A.DYNAMIC)return;const s=ws,n=xs;this.vectorToWorldFrame(t,s),this.vectorToWorldFrame(e,n),this.applyImpulse(s,n)}updateMassProperties(){const t=gs;this.invMass=this.mass>0?1/this.mass:0;const e=this.inertia,s=this.fixedRotation;this.updateAABB(),t.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),te.calculateInertia(t,this.mass,e),this.invInertia.set(e.x>0&&!s?1/e.x:0,e.y>0&&!s?1/e.y:0,e.z>0&&!s?1/e.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(t,e){const s=new c;return t.vsub(this.position,s),this.angularVelocity.cross(s,e),this.velocity.vadd(e,e),e}integrate(t,e,s){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===A.DYNAMIC||this.type===A.KINEMATIC)||this.sleepState===A.SLEEPING)return;const n=this.velocity,i=this.angularVelocity,o=this.position,r=this.force,a=this.torque,l=this.quaternion,d=this.invMass,u=this.invInertiaWorld,h=this.linearFactor,f=d*t;n.x+=r.x*f*h.x,n.y+=r.y*f*h.y,n.z+=r.z*f*h.z;const p=u.elements,y=this.angularFactor,v=a.x*y.x,w=a.y*y.y,m=a.z*y.z;i.x+=t*(p[0]*v+p[1]*w+p[2]*m),i.y+=t*(p[3]*v+p[4]*w+p[5]*m),i.z+=t*(p[6]*v+p[7]*w+p[8]*m),o.x+=n.x*t,o.y+=n.y*t,o.z+=n.z*t,l.integrate(this.angularVelocity,t,this.angularFactor,l),e&&(s?l.normalizeFast():l.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}A.idCounter=0,A.COLLIDE_EVENT_NAME="collide",A.DYNAMIC=U.DYNAMIC,A.STATIC=U.STATIC,A.KINEMATIC=U.KINEMATIC,A.AWAKE=ee.AWAKE,A.SLEEPY=ee.SLEEPY,A.SLEEPING=ee.SLEEPING,A.wakeupEvent={type:"wakeup"},A.sleepyEvent={type:"sleepy"},A.sleepEvent={type:"sleep"};const as=new c,ls=new H,hs=new et,ds=new ot,us=new ot;new ot;const ps=new c,fs=new c,ms=new c,ys=new c,vs=new c,ws=new c,xs=new c,gs=new c;class bs{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(t,e,s){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(t,e){return!((t.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&t.collisionFilterMask)===0||((t.type&A.STATIC)!==0||t.sleepState===A.SLEEPING)&&((e.type&A.STATIC)!==0||e.sleepState===A.SLEEPING))}intersectionTest(t,e,s,n){this.useBoundingBoxes?this.doBoundingBoxBroadphase(t,e,s,n):this.doBoundingSphereBroadphase(t,e,s,n)}doBoundingSphereBroadphase(t,e,s,n){const i=Es;e.position.vsub(t.position,i);const o=(t.boundingRadius+e.boundingRadius)**2;i.lengthSquared()<o&&(s.push(t),n.push(e))}doBoundingBoxBroadphase(t,e,s,n){t.aabbNeedsUpdate&&t.updateAABB(),e.aabbNeedsUpdate&&e.updateAABB(),t.aabb.overlaps(e.aabb)&&(s.push(t),n.push(e))}makePairsUnique(t,e){const s=Cs,n=zs,i=Ms,o=t.length;for(let r=0;r!==o;r++)n[r]=t[r],i[r]=e[r];t.length=0,e.length=0;for(let r=0;r!==o;r++){const a=n[r].id,l=i[r].id,d=a<l?`${a},${l}`:`${l},${a}`;s[d]=r,s.keys.push(d)}for(let r=0;r!==s.keys.length;r++){const a=s.keys.pop(),l=s[a];t.push(n[l]),e.push(i[l]),delete s[a]}}setWorld(t){}static boundingSphereCheck(t,e){const s=new c;t.position.vsub(e.position,s);const n=t.shapes[0],i=e.shapes[0];return Math.pow(n.boundingSphereRadius+i.boundingSphereRadius,2)>s.lengthSquared()}aabbQuery(t,e,s){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const Es=new c;new c,new H,new c;const Cs={keys:[]},zs=[],Ms=[];new c,new c,new c;class Ss extends bs{constructor(){super()}collisionPairs(t,e,s){const n=t.bodies,i=n.length;let o,r;for(let a=0;a!==i;a++)for(let l=0;l!==a;l++)o=n[a],r=n[l],this.needBroadphaseCollision(o,r)&&this.intersectionTest(o,r,e,s)}aabbQuery(t,e,s){s===void 0&&(s=[]);for(let n=0;n<t.bodies.length;n++){const i=t.bodies[n];i.aabbNeedsUpdate&&i.updateAABB(),i.aabb.overlaps(e)&&s.push(i)}return s}}class jt{constructor(){this.rayFromWorld=new c,this.rayToWorld=new c,this.hitNormalWorld=new c,this.hitPointWorld=new c,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(t,e,s,n,i,o,r){this.rayFromWorld.copy(t),this.rayToWorld.copy(e),this.hitNormalWorld.copy(s),this.hitPointWorld.copy(n),this.shape=i,this.body=o,this.distance=r}}let be,Ee,Ce,ze,Me,Se,Ae;const se={CLOSEST:1,ANY:2,ALL:4};be=N.types.SPHERE,Ee=N.types.PLANE,Ce=N.types.BOX,ze=N.types.CYLINDER,Me=N.types.CONVEXPOLYHEDRON,Se=N.types.HEIGHTFIELD,Ae=N.types.TRIMESH;class Y{get[be](){return this._intersectSphere}get[Ee](){return this._intersectPlane}get[Ce](){return this._intersectBox}get[ze](){return this._intersectConvex}get[Me](){return this._intersectConvex}get[Se](){return this._intersectHeightfield}get[Ae](){return this._intersectTrimesh}constructor(t,e){t===void 0&&(t=new c),e===void 0&&(e=new c),this.from=t.clone(),this.to=e.clone(),this.direction=new c,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=Y.ANY,this.result=new jt,this.hasHit=!1,this.callback=s=>{}}intersectWorld(t,e){return this.mode=e.mode||Y.ANY,this.result=e.result||new jt,this.skipBackfaces=!!e.skipBackfaces,this.collisionFilterMask=typeof e.collisionFilterMask<"u"?e.collisionFilterMask:-1,this.collisionFilterGroup=typeof e.collisionFilterGroup<"u"?e.collisionFilterGroup:-1,this.checkCollisionResponse=typeof e.checkCollisionResponse<"u"?e.checkCollisionResponse:!0,e.from&&this.from.copy(e.from),e.to&&this.to.copy(e.to),this.callback=e.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(Te),ne.length=0,t.broadphase.aabbQuery(t,Te,ne),this.intersectBodies(ne),this.hasHit}intersectBody(t,e){e&&(this.result=e,this.updateDirection());const s=this.checkCollisionResponse;if(s&&!t.collisionResponse||(this.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&this.collisionFilterMask)===0)return;const n=As,i=Ts;for(let o=0,r=t.shapes.length;o<r;o++){const a=t.shapes[o];if(!(s&&!a.collisionResponse)&&(t.quaternion.mult(t.shapeOrientations[o],i),t.quaternion.vmult(t.shapeOffsets[o],n),n.vadd(t.position,n),this.intersectShape(a,i,n,t),this.result.shouldStop))break}}intersectBodies(t,e){e&&(this.result=e,this.updateDirection());for(let s=0,n=t.length;!this.result.shouldStop&&s<n;s++)this.intersectBody(t[s])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(t,e,s,n){const i=this.from;if(Ws(i,this.direction,s)>t.boundingSphereRadius)return;const r=this[t.type];r&&r.call(this,t,e,s,n,t)}_intersectBox(t,e,s,n,i){return this._intersectConvex(t.convexPolyhedronRepresentation,e,s,n,i)}_intersectPlane(t,e,s,n,i){const o=this.from,r=this.to,a=this.direction,l=new c(0,0,1);e.vmult(l,l);const d=new c;o.vsub(s,d);const u=d.dot(l);r.vsub(s,d);const h=d.dot(l);if(u*h>0||o.distanceTo(r)<u)return;const f=l.dot(a);if(Math.abs(f)<this.precision)return;const p=new c,y=new c,v=new c;o.vsub(s,p);const w=-l.dot(p)/f;a.scale(w,y),o.vadd(y,v),this.reportIntersection(l,v,i,n,-1)}getAABB(t){const{lowerBound:e,upperBound:s}=t,n=this.to,i=this.from;e.x=Math.min(n.x,i.x),e.y=Math.min(n.y,i.y),e.z=Math.min(n.z,i.z),s.x=Math.max(n.x,i.x),s.y=Math.max(n.y,i.y),s.z=Math.max(n.z,i.z)}_intersectHeightfield(t,e,s,n,i){t.data,t.elementSize;const o=Is;o.from.copy(this.from),o.to.copy(this.to),V.pointToLocalFrame(s,e,o.from,o.from),V.pointToLocalFrame(s,e,o.to,o.to),o.updateDirection();const r=Ns;let a,l,d,u;a=l=0,d=u=t.data.length-1;const h=new et;o.getAABB(h),t.getIndexOfPosition(h.lowerBound.x,h.lowerBound.y,r,!0),a=Math.max(a,r[0]),l=Math.max(l,r[1]),t.getIndexOfPosition(h.upperBound.x,h.upperBound.y,r,!0),d=Math.min(d,r[0]+1),u=Math.min(u,r[1]+1);for(let f=a;f<d;f++)for(let p=l;p<u;p++){if(this.result.shouldStop)return;if(t.getAabbAtIndex(f,p,h),!!h.overlapsRay(o)){if(t.getConvexTrianglePillar(f,p,!1),V.pointToWorldFrame(s,e,t.pillarOffset,Wt),this._intersectConvex(t.pillarConvex,e,Wt,n,i,Ie),this.result.shouldStop)return;t.getConvexTrianglePillar(f,p,!0),V.pointToWorldFrame(s,e,t.pillarOffset,Wt),this._intersectConvex(t.pillarConvex,e,Wt,n,i,Ie)}}}_intersectSphere(t,e,s,n,i){const o=this.from,r=this.to,a=t.radius,l=(r.x-o.x)**2+(r.y-o.y)**2+(r.z-o.z)**2,d=2*((r.x-o.x)*(o.x-s.x)+(r.y-o.y)*(o.y-s.y)+(r.z-o.z)*(o.z-s.z)),u=(o.x-s.x)**2+(o.y-s.y)**2+(o.z-s.z)**2-a**2,h=d**2-4*l*u,f=Ps,p=Fs;if(!(h<0))if(h===0)o.lerp(r,h,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1);else{const y=(-d-Math.sqrt(h))/(2*l),v=(-d+Math.sqrt(h))/(2*l);if(y>=0&&y<=1&&(o.lerp(r,y,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1)),this.result.shouldStop)return;v>=0&&v<=1&&(o.lerp(r,v,f),f.vsub(s,p),p.normalize(),this.reportIntersection(p,f,i,n,-1))}}_intersectConvex(t,e,s,n,i,o){const r=Bs,a=Ne,l=o&&o.faceList||null,d=t.faces,u=t.vertices,h=t.faceNormals,f=this.direction,p=this.from,y=this.to,v=p.distanceTo(y),w=l?l.length:d.length,m=this.result;for(let x=0;!m.shouldStop&&x<w;x++){const g=l?l[x]:x,b=d[g],z=h[g],I=e,F=s;a.copy(u[b[0]]),I.vmult(a,a),a.vadd(F,a),a.vsub(p,a),I.vmult(z,r);const R=f.dot(r);if(Math.abs(R)<this.precision)continue;const P=r.dot(a)/R;if(!(P<0)){f.scale(P,Q),Q.vadd(p,Q),rt.copy(u[b[0]]),I.vmult(rt,rt),F.vadd(rt,rt);for(let q=1;!m.shouldStop&&q<b.length-1;q++){at.copy(u[b[q]]),lt.copy(u[b[q+1]]),I.vmult(at,at),I.vmult(lt,lt),F.vadd(at,at),F.vadd(lt,lt);const O=Q.distanceTo(p);!(Y.pointInTriangle(Q,rt,at,lt)||Y.pointInTriangle(Q,at,rt,lt))||O>v||this.reportIntersection(r,Q,i,n,g)}}}}_intersectTrimesh(t,e,s,n,i,o){const r=Rs,a=Vs,l=js,d=Ne,u=qs,h=_s,f=Ls,p=ks,y=Os,v=t.indices;t.vertices;const w=this.from,m=this.to,x=this.direction;l.position.copy(s),l.quaternion.copy(e),V.vectorToLocalFrame(s,e,x,u),V.pointToLocalFrame(s,e,w,h),V.pointToLocalFrame(s,e,m,f),f.x*=t.scale.x,f.y*=t.scale.y,f.z*=t.scale.z,h.x*=t.scale.x,h.y*=t.scale.y,h.z*=t.scale.z,f.vsub(h,u),u.normalize();const g=h.distanceSquared(f);t.tree.rayQuery(this,l,a);for(let b=0,z=a.length;!this.result.shouldStop&&b!==z;b++){const I=a[b];t.getNormal(I,r),t.getVertex(v[I*3],rt),rt.vsub(h,d);const F=u.dot(r),R=r.dot(d)/F;if(R<0)continue;u.scale(R,Q),Q.vadd(h,Q),t.getVertex(v[I*3+1],at),t.getVertex(v[I*3+2],lt);const P=Q.distanceSquared(h);!(Y.pointInTriangle(Q,at,rt,lt)||Y.pointInTriangle(Q,rt,at,lt))||P>g||(V.vectorToWorldFrame(e,r,y),V.pointToWorldFrame(s,e,Q,p),this.reportIntersection(y,p,i,n,I))}a.length=0}reportIntersection(t,e,s,n,i){const o=this.from,r=this.to,a=o.distanceTo(e),l=this.result;if(!(this.skipBackfaces&&t.dot(this.direction)>0))switch(l.hitFaceIndex=typeof i<"u"?i:-1,this.mode){case Y.ALL:this.hasHit=!0,l.set(o,r,t,e,s,n,a),l.hasHit=!0,this.callback(l);break;case Y.CLOSEST:(a<l.distance||!l.hasHit)&&(this.hasHit=!0,l.hasHit=!0,l.set(o,r,t,e,s,n,a));break;case Y.ANY:this.hasHit=!0,l.hasHit=!0,l.set(o,r,t,e,s,n,a),l.shouldStop=!0;break}}static pointInTriangle(t,e,s,n){n.vsub(e,Et),s.vsub(e,Pt),t.vsub(e,ie);const i=Et.dot(Et),o=Et.dot(Pt),r=Et.dot(ie),a=Pt.dot(Pt),l=Pt.dot(ie);let d,u;return(d=a*r-o*l)>=0&&(u=i*l-o*r)>=0&&d+u<i*a-o*o}}Y.CLOSEST=se.CLOSEST,Y.ANY=se.ANY,Y.ALL=se.ALL;const Te=new et,ne=[],Pt=new c,ie=new c,As=new c,Ts=new H,Q=new c,rt=new c,at=new c,lt=new c;new c,new jt;const Ie={faceList:[0]},Wt=new c,Is=new Y,Ns=[],Ps=new c,Fs=new c,Bs=new c;new c,new c;const Ne=new c,Rs=new c,qs=new c,_s=new c,Ls=new c,Os=new c,ks=new c;new et;const Vs=[],js=new V,Et=new c,Gt=new c;function Ws(M,t,e){e.vsub(M,Et);const s=Et.dot(t);return t.scale(s,Gt),Gt.vadd(M,Gt),e.distanceTo(Gt)}class Pe{static defaults(t,e){t===void 0&&(t={});for(let s in e)s in t||(t[s]=e[s]);return t}}class Dt{constructor(t,e,s){s===void 0&&(s={}),s=Pe.defaults(s,{collideConnected:!0,wakeUpBodies:!0}),this.equations=[],this.bodyA=t,this.bodyB=e,this.id=Dt.idCounter++,this.collideConnected=s.collideConnected,s.wakeUpBodies&&(t&&t.wakeUp(),e&&e.wakeUp())}update(){throw new Error("method update() not implmemented in this Constraint subclass!")}enable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!0}disable(){const t=this.equations;for(let e=0;e<t.length;e++)t[e].enabled=!1}}Dt.idCounter=0;class Fe{constructor(){this.spatial=new c,this.rotational=new c}multiplyElement(t){return t.spatial.dot(this.spatial)+t.rotational.dot(this.rotational)}multiplyVectors(t,e){return t.dot(this.spatial)+e.dot(this.rotational)}}class Ft{constructor(t,e,s,n){s===void 0&&(s=-1e6),n===void 0&&(n=1e6),this.id=Ft.idCounter++,this.minForce=s,this.maxForce=n,this.bi=t,this.bj=e,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new Fe,this.jacobianElementB=new Fe,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(t,e,s){const n=e,i=t,o=s;this.a=4/(o*(1+4*n)),this.b=4*n/(1+4*n),this.eps=4/(o*o*i*(1+4*n))}computeB(t,e,s){const n=this.computeGW(),i=this.computeGq(),o=this.computeGiMf();return-i*t-n*e-o*s}computeGq(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.position,o=n.position;return t.spatial.dot(i)+e.spatial.dot(o)}computeGW(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.velocity,o=n.velocity,r=s.angularVelocity,a=n.angularVelocity;return t.multiplyVectors(i,r)+e.multiplyVectors(o,a)}computeGWlambda(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.vlambda,o=n.vlambda,r=s.wlambda,a=n.wlambda;return t.multiplyVectors(i,r)+e.multiplyVectors(o,a)}computeGiMf(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.force,o=s.torque,r=n.force,a=n.torque,l=s.invMassSolve,d=n.invMassSolve;return i.scale(l,Be),r.scale(d,Re),s.invInertiaWorldSolve.vmult(o,qe),n.invInertiaWorldSolve.vmult(a,_e),t.multiplyVectors(Be,qe)+e.multiplyVectors(Re,_e)}computeGiMGt(){const t=this.jacobianElementA,e=this.jacobianElementB,s=this.bi,n=this.bj,i=s.invMassSolve,o=n.invMassSolve,r=s.invInertiaWorldSolve,a=n.invInertiaWorldSolve;let l=i+o;return r.vmult(t.rotational,Ht),l+=Ht.dot(t.rotational),a.vmult(e.rotational,Ht),l+=Ht.dot(e.rotational),l}addToWlambda(t){const e=this.jacobianElementA,s=this.jacobianElementB,n=this.bi,i=this.bj,o=Gs;n.vlambda.addScaledVector(n.invMassSolve*t,e.spatial,n.vlambda),i.vlambda.addScaledVector(i.invMassSolve*t,s.spatial,i.vlambda),n.invInertiaWorldSolve.vmult(e.rotational,o),n.wlambda.addScaledVector(t,o,n.wlambda),i.invInertiaWorldSolve.vmult(s.rotational,o),i.wlambda.addScaledVector(t,o,i.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Ft.idCounter=0;const Be=new c,Re=new c,qe=new c,_e=new c,Ht=new c,Gs=new c;class Le extends Ft{constructor(t,e,s){s===void 0&&(s=1e6),super(t,e,0,s),this.restitution=0,this.ri=new c,this.rj=new c,this.ni=new c}computeB(t){const e=this.a,s=this.b,n=this.bi,i=this.bj,o=this.ri,r=this.rj,a=Ds,l=Hs,d=n.velocity,u=n.angularVelocity;n.force,n.torque;const h=i.velocity,f=i.angularVelocity;i.force,i.torque;const p=Ys,y=this.jacobianElementA,v=this.jacobianElementB,w=this.ni;o.cross(w,a),r.cross(w,l),w.negate(y.spatial),a.negate(y.rotational),v.spatial.copy(w),v.rotational.copy(l),p.copy(i.position),p.vadd(r,p),p.vsub(n.position,p),p.vsub(o,p);const m=w.dot(p),x=this.restitution+1,g=x*h.dot(w)-x*d.dot(w)+f.dot(l)-u.dot(a),b=this.computeGiMf();return-m*e-g*s-t*b}getImpactVelocityAlongNormal(){const t=$s,e=Us,s=Xs,n=Ks,i=Zs;return this.bi.position.vadd(this.ri,s),this.bj.position.vadd(this.rj,n),this.bi.getVelocityAtWorldPoint(s,t),this.bj.getVelocityAtWorldPoint(n,e),t.vsub(e,i),this.ni.dot(i)}}const Ds=new c,Hs=new c,Ys=new c,$s=new c,Us=new c,Xs=new c,Ks=new c,Zs=new c;new c,new c,new c,new c,new c,new c;class Ct extends Dt{constructor(t,e,s,n){n===void 0&&(n=1e6),super(t,e),typeof s>"u"&&(s=t.position.distanceTo(e.position)),this.distance=s;const i=this.distanceEquation=new Le(t,e);this.equations.push(i),i.minForce=-n,i.maxForce=n}update(){const t=this.bodyA,e=this.bodyB,s=this.distanceEquation,n=this.distance*.5,i=s.ni;e.position.vsub(t.position,i),i.normalize(),i.scale(n,s.ri),i.scale(-n,s.rj)}}new c,new c,new c,new c;class Oe extends Ft{constructor(t,e,s){super(t,e,-s,s),this.ri=new c,this.rj=new c,this.t=new c}computeB(t){this.a;const e=this.b;this.bi,this.bj;const s=this.ri,n=this.rj,i=Js,o=Qs,r=this.t;s.cross(r,i),n.cross(r,o);const a=this.jacobianElementA,l=this.jacobianElementB;r.negate(a.spatial),i.negate(a.rotational),l.spatial.copy(r),l.rotational.copy(o);const d=this.computeGW(),u=this.computeGiMf();return-d*e-t*u}}const Js=new c,Qs=new c;class Bt{constructor(t,e,s){s=Pe.defaults(s,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Bt.idCounter++,this.materials=[t,e],this.friction=s.friction,this.restitution=s.restitution,this.contactEquationStiffness=s.contactEquationStiffness,this.contactEquationRelaxation=s.contactEquationRelaxation,this.frictionEquationStiffness=s.frictionEquationStiffness,this.frictionEquationRelaxation=s.frictionEquationRelaxation}}Bt.idCounter=0;class Rt{constructor(t){t===void 0&&(t={});let e="";typeof t=="string"&&(e=t,t={}),this.name=e,this.id=Rt.idCounter++,this.friction=typeof t.friction<"u"?t.friction:-1,this.restitution=typeof t.restitution<"u"?t.restitution:-1}}Rt.idCounter=0,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new Y,new c,new c,new c,new c(1,0,0),new c(0,1,0),new c(0,0,1),new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c;class oe extends N{constructor(t){if(super({type:N.types.SPHERE}),this.radius=t!==void 0?t:1,this.radius<0)throw new Error("The sphere radius cannot be negative.");this.updateBoundingSphereRadius()}calculateLocalInertia(t,e){e===void 0&&(e=new c);const s=2*t*this.radius*this.radius/5;return e.x=s,e.y=s,e.z=s,e}volume(){return 4*Math.PI*Math.pow(this.radius,3)/3}updateBoundingSphereRadius(){this.boundingSphereRadius=this.radius}calculateWorldAABB(t,e,s,n){const i=this.radius,o=["x","y","z"];for(let r=0;r<o.length;r++){const a=o[r];s[a]=t[a]-i,n[a]=t[a]+i}}}new c,new c,new c,new c,new c,new c,new c,new c,new c;class ke extends Mt{constructor(t,e,s,n){if(t===void 0&&(t=1),e===void 0&&(e=1),s===void 0&&(s=1),n===void 0&&(n=8),t<0)throw new Error("The cylinder radiusTop cannot be negative.");if(e<0)throw new Error("The cylinder radiusBottom cannot be negative.");const i=n,o=[],r=[],a=[],l=[],d=[],u=Math.cos,h=Math.sin;o.push(new c(-e*h(0),-s*.5,e*u(0))),l.push(0),o.push(new c(-t*h(0),s*.5,t*u(0))),d.push(1);for(let p=0;p<i;p++){const y=2*Math.PI/i*(p+1),v=2*Math.PI/i*(p+.5);p<i-1?(o.push(new c(-e*h(y),-s*.5,e*u(y))),l.push(2*p+2),o.push(new c(-t*h(y),s*.5,t*u(y))),d.push(2*p+3),a.push([2*p,2*p+1,2*p+3,2*p+2])):a.push([2*p,2*p+1,1,0]),(i%2===1||p<i/2)&&r.push(new c(-h(v),0,u(v)))}a.push(l),r.push(new c(0,1,0));const f=[];for(let p=0;p<d.length;p++)f.push(d[d.length-p-1]);a.push(f),super({vertices:o,faces:a,axes:r}),this.type=N.types.CYLINDER,this.radiusTop=t,this.radiusBottom=e,this.height=s,this.numSegments=n}}new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new c,new et,new c,new et,new c,new c,new c,new c,new c,new c,new c,new et,new c,new V,new et;class tn{constructor(){this.equations=[]}solve(t,e){return 0}addEquation(t){t.enabled&&!t.bi.isTrigger&&!t.bj.isTrigger&&this.equations.push(t)}removeEquation(t){const e=this.equations,s=e.indexOf(t);s!==-1&&e.splice(s,1)}removeAllEquations(){this.equations.length=0}}class en extends tn{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(t,e){let s=0;const n=this.iterations,i=this.tolerance*this.tolerance,o=this.equations,r=o.length,a=e.bodies,l=a.length,d=t;let u,h,f,p,y,v;if(r!==0)for(let g=0;g!==l;g++)a[g].updateSolveMassProperties();const w=nn,m=on,x=sn;w.length=r,m.length=r,x.length=r;for(let g=0;g!==r;g++){const b=o[g];x[g]=0,m[g]=b.computeB(d),w[g]=1/b.computeC()}if(r!==0){for(let z=0;z!==l;z++){const I=a[z],F=I.vlambda,R=I.wlambda;F.set(0,0,0),R.set(0,0,0)}for(s=0;s!==n;s++){p=0;for(let z=0;z!==r;z++){const I=o[z];u=m[z],h=w[z],v=x[z],y=I.computeGWlambda(),f=h*(u-y-I.eps*v),v+f<I.minForce?f=I.minForce-v:v+f>I.maxForce&&(f=I.maxForce-v),x[z]+=f,p+=f>0?f:-f,I.addToWlambda(f)}if(p*p<i)break}for(let z=0;z!==l;z++){const I=a[z],F=I.velocity,R=I.angularVelocity;I.vlambda.vmul(I.linearFactor,I.vlambda),F.vadd(I.vlambda,F),I.wlambda.vmul(I.angularFactor,I.wlambda),R.vadd(I.wlambda,R)}let g=o.length;const b=1/d;for(;g--;)o[g].multiplier=x[g]*b}return s}}const sn=[],nn=[],on=[];class rn{constructor(){this.objects=[],this.type=Object}release(){const t=arguments.length;for(let e=0;e!==t;e++)this.objects.push(e<0||arguments.length<=e?void 0:arguments[e]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(t){const e=this.objects;for(;e.length>t;)e.pop();for(;e.length<t;)e.push(this.constructObject());return this}}class cn extends rn{constructor(){super(...arguments),this.type=c}constructObject(){return new c}}const W={sphereSphere:N.types.SPHERE,spherePlane:N.types.SPHERE|N.types.PLANE,boxBox:N.types.BOX|N.types.BOX,sphereBox:N.types.SPHERE|N.types.BOX,planeBox:N.types.PLANE|N.types.BOX,convexConvex:N.types.CONVEXPOLYHEDRON,sphereConvex:N.types.SPHERE|N.types.CONVEXPOLYHEDRON,planeConvex:N.types.PLANE|N.types.CONVEXPOLYHEDRON,boxConvex:N.types.BOX|N.types.CONVEXPOLYHEDRON,sphereHeightfield:N.types.SPHERE|N.types.HEIGHTFIELD,boxHeightfield:N.types.BOX|N.types.HEIGHTFIELD,convexHeightfield:N.types.CONVEXPOLYHEDRON|N.types.HEIGHTFIELD,sphereParticle:N.types.PARTICLE|N.types.SPHERE,planeParticle:N.types.PLANE|N.types.PARTICLE,boxParticle:N.types.BOX|N.types.PARTICLE,convexParticle:N.types.PARTICLE|N.types.CONVEXPOLYHEDRON,cylinderCylinder:N.types.CYLINDER,sphereCylinder:N.types.SPHERE|N.types.CYLINDER,planeCylinder:N.types.PLANE|N.types.CYLINDER,boxCylinder:N.types.BOX|N.types.CYLINDER,convexCylinder:N.types.CONVEXPOLYHEDRON|N.types.CYLINDER,heightfieldCylinder:N.types.HEIGHTFIELD|N.types.CYLINDER,particleCylinder:N.types.PARTICLE|N.types.CYLINDER,sphereTrimesh:N.types.SPHERE|N.types.TRIMESH,planeTrimesh:N.types.PLANE|N.types.TRIMESH};class an{get[W.sphereSphere](){return this.sphereSphere}get[W.spherePlane](){return this.spherePlane}get[W.boxBox](){return this.boxBox}get[W.sphereBox](){return this.sphereBox}get[W.planeBox](){return this.planeBox}get[W.convexConvex](){return this.convexConvex}get[W.sphereConvex](){return this.sphereConvex}get[W.planeConvex](){return this.planeConvex}get[W.boxConvex](){return this.boxConvex}get[W.sphereHeightfield](){return this.sphereHeightfield}get[W.boxHeightfield](){return this.boxHeightfield}get[W.convexHeightfield](){return this.convexHeightfield}get[W.sphereParticle](){return this.sphereParticle}get[W.planeParticle](){return this.planeParticle}get[W.boxParticle](){return this.boxParticle}get[W.convexParticle](){return this.convexParticle}get[W.cylinderCylinder](){return this.convexConvex}get[W.sphereCylinder](){return this.sphereConvex}get[W.planeCylinder](){return this.planeConvex}get[W.boxCylinder](){return this.boxConvex}get[W.convexCylinder](){return this.convexConvex}get[W.heightfieldCylinder](){return this.heightfieldCylinder}get[W.particleCylinder](){return this.particleCylinder}get[W.sphereTrimesh](){return this.sphereTrimesh}get[W.planeTrimesh](){return this.planeTrimesh}constructor(t){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new cn,this.world=t,this.currentContactMaterial=t.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(t,e,s,n,i,o){let r;this.contactPointPool.length?(r=this.contactPointPool.pop(),r.bi=t,r.bj=e):r=new Le(t,e),r.enabled=t.collisionResponse&&e.collisionResponse&&s.collisionResponse&&n.collisionResponse;const a=this.currentContactMaterial;r.restitution=a.restitution,r.setSpookParams(a.contactEquationStiffness,a.contactEquationRelaxation,this.world.dt);const l=s.material||t.material,d=n.material||e.material;return l&&d&&l.restitution>=0&&d.restitution>=0&&(r.restitution=l.restitution*d.restitution),r.si=i||s,r.sj=o||n,r}createFrictionEquationsFromContact(t,e){const s=t.bi,n=t.bj,i=t.si,o=t.sj,r=this.world,a=this.currentContactMaterial;let l=a.friction;const d=i.material||s.material,u=o.material||n.material;if(d&&u&&d.friction>=0&&u.friction>=0&&(l=d.friction*u.friction),l>0){const h=l*(r.frictionGravity||r.gravity).length();let f=s.invMass+n.invMass;f>0&&(f=1/f);const p=this.frictionEquationPool,y=p.length?p.pop():new Oe(s,n,h*f),v=p.length?p.pop():new Oe(s,n,h*f);return y.bi=v.bi=s,y.bj=v.bj=n,y.minForce=v.minForce=-h*f,y.maxForce=v.maxForce=h*f,y.ri.copy(t.ri),y.rj.copy(t.rj),v.ri.copy(t.ri),v.rj.copy(t.rj),t.ni.tangents(y.t,v.t),y.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),v.setSpookParams(a.frictionEquationStiffness,a.frictionEquationRelaxation,r.dt),y.enabled=v.enabled=t.enabled,e.push(y,v),!0}return!1}createFrictionFromAverage(t){let e=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(e,this.frictionResult)||t===1)return;const s=this.frictionResult[this.frictionResult.length-2],n=this.frictionResult[this.frictionResult.length-1];zt.setZero(),St.setZero(),At.setZero();const i=e.bi;e.bj;for(let r=0;r!==t;r++)e=this.result[this.result.length-1-r],e.bi!==i?(zt.vadd(e.ni,zt),St.vadd(e.ri,St),At.vadd(e.rj,At)):(zt.vsub(e.ni,zt),St.vadd(e.rj,St),At.vadd(e.ri,At));const o=1/t;St.scale(o,s.ri),At.scale(o,s.rj),n.ri.copy(s.ri),n.rj.copy(s.rj),zt.normalize(),zt.tangents(s.t,n.t)}getContacts(t,e,s,n,i,o,r){this.contactPointPool=i,this.frictionEquationPool=r,this.result=n,this.frictionResult=o;const a=dn,l=un,d=ln,u=hn;for(let h=0,f=t.length;h!==f;h++){const p=t[h],y=e[h];let v=null;p.material&&y.material&&(v=s.getContactMaterial(p.material,y.material)||null);const w=p.type&A.KINEMATIC&&y.type&A.STATIC||p.type&A.STATIC&&y.type&A.KINEMATIC||p.type&A.KINEMATIC&&y.type&A.KINEMATIC;for(let m=0;m<p.shapes.length;m++){p.quaternion.mult(p.shapeOrientations[m],a),p.quaternion.vmult(p.shapeOffsets[m],d),d.vadd(p.position,d);const x=p.shapes[m];for(let g=0;g<y.shapes.length;g++){y.quaternion.mult(y.shapeOrientations[g],l),y.quaternion.vmult(y.shapeOffsets[g],u),u.vadd(y.position,u);const b=y.shapes[g];if(!(x.collisionFilterMask&b.collisionFilterGroup&&b.collisionFilterMask&x.collisionFilterGroup)||d.distanceTo(u)>x.boundingSphereRadius+b.boundingSphereRadius)continue;let z=null;x.material&&b.material&&(z=s.getContactMaterial(x.material,b.material)||null),this.currentContactMaterial=z||v||s.defaultContactMaterial;const I=x.type|b.type,F=this[I];if(F){let R=!1;x.type<b.type?R=F.call(this,x,b,d,u,a,l,p,y,x,b,w):R=F.call(this,b,x,u,d,l,a,y,p,x,b,w),R&&w&&(s.shapeOverlapKeeper.set(x.id,b.id),s.bodyOverlapKeeper.set(p.id,y.id))}}}}}sphereSphere(t,e,s,n,i,o,r,a,l,d,u){if(u)return s.distanceSquared(n)<(t.radius+e.radius)**2;const h=this.createContactEquation(r,a,t,e,l,d);n.vsub(s,h.ni),h.ni.normalize(),h.ri.copy(h.ni),h.rj.copy(h.ni),h.ri.scale(t.radius,h.ri),h.rj.scale(-e.radius,h.rj),h.ri.vadd(s,h.ri),h.ri.vsub(r.position,h.ri),h.rj.vadd(n,h.rj),h.rj.vsub(a.position,h.rj),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}spherePlane(t,e,s,n,i,o,r,a,l,d,u){const h=this.createContactEquation(r,a,t,e,l,d);if(h.ni.set(0,0,1),o.vmult(h.ni,h.ni),h.ni.negate(h.ni),h.ni.normalize(),h.ni.scale(t.radius,h.ri),s.vsub(n,Yt),h.ni.scale(h.ni.dot(Yt),Ve),Yt.vsub(Ve,h.rj),-Yt.dot(h.ni)<=t.radius){if(u)return!0;const f=h.ri,p=h.rj;f.vadd(s,f),f.vsub(r.position,f),p.vadd(n,p),p.vsub(a.position,p),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}}boxBox(t,e,s,n,i,o,r,a,l,d,u){return t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e.convexPolyhedronRepresentation,s,n,i,o,r,a,t,e,u)}sphereBox(t,e,s,n,i,o,r,a,l,d,u){const h=this.v3pool,f=On;s.vsub(n,$t),e.getSideNormals(f,o);const p=t.radius;let y=!1;const v=Vn,w=jn,m=Wn;let x=null,g=0,b=0,z=0,I=null;for(let C=0,D=f.length;C!==D&&y===!1;C++){const L=qn;L.copy(f[C]);const k=L.length();L.normalize();const tt=$t.dot(L);if(tt<k+p&&tt>0){const Z=_n,B=Ln;Z.copy(f[(C+1)%3]),B.copy(f[(C+2)%3]);const Nt=Z.length(),Zt=B.length();Z.normalize(),B.normalize();const pe=$t.dot(Z),fe=$t.dot(B);if(pe<Nt&&pe>-Nt&&fe<Zt&&fe>-Zt){const Qe=Math.abs(tt-k-p);if((I===null||Qe<I)&&(I=Qe,b=pe,z=fe,x=k,v.copy(L),w.copy(Z),m.copy(B),g++,u))return!0}}}if(g){y=!0;const C=this.createContactEquation(r,a,t,e,l,d);v.scale(-p,C.ri),C.ni.copy(v),C.ni.negate(C.ni),v.scale(x,v),w.scale(b,w),v.vadd(w,v),m.scale(z,m),v.vadd(m,C.rj),C.ri.vadd(s,C.ri),C.ri.vsub(r.position,C.ri),C.rj.vadd(n,C.rj),C.rj.vsub(a.position,C.rj),this.result.push(C),this.createFrictionEquationsFromContact(C,this.frictionResult)}let F=h.get();const R=kn;for(let C=0;C!==2&&!y;C++)for(let D=0;D!==2&&!y;D++)for(let L=0;L!==2&&!y;L++)if(F.set(0,0,0),C?F.vadd(f[0],F):F.vsub(f[0],F),D?F.vadd(f[1],F):F.vsub(f[1],F),L?F.vadd(f[2],F):F.vsub(f[2],F),n.vadd(F,R),R.vsub(s,R),R.lengthSquared()<p*p){if(u)return!0;y=!0;const k=this.createContactEquation(r,a,t,e,l,d);k.ri.copy(R),k.ri.normalize(),k.ni.copy(k.ri),k.ri.scale(p,k.ri),k.rj.copy(F),k.ri.vadd(s,k.ri),k.ri.vsub(r.position,k.ri),k.rj.vadd(n,k.rj),k.rj.vsub(a.position,k.rj),this.result.push(k),this.createFrictionEquationsFromContact(k,this.frictionResult)}h.release(F),F=null;const P=h.get(),q=h.get(),O=h.get(),E=h.get(),T=h.get(),S=f.length;for(let C=0;C!==S&&!y;C++)for(let D=0;D!==S&&!y;D++)if(C%3!==D%3){f[D].cross(f[C],P),P.normalize(),f[C].vadd(f[D],q),O.copy(s),O.vsub(q,O),O.vsub(n,O);const L=O.dot(P);P.scale(L,E);let k=0;for(;k===C%3||k===D%3;)k++;T.copy(s),T.vsub(E,T),T.vsub(q,T),T.vsub(n,T);const tt=Math.abs(L),Z=T.length();if(tt<f[k].length()&&Z<p){if(u)return!0;y=!0;const B=this.createContactEquation(r,a,t,e,l,d);q.vadd(E,B.rj),B.rj.copy(B.rj),T.negate(B.ni),B.ni.normalize(),B.ri.copy(B.rj),B.ri.vadd(n,B.ri),B.ri.vsub(s,B.ri),B.ri.normalize(),B.ri.scale(p,B.ri),B.ri.vadd(s,B.ri),B.ri.vsub(r.position,B.ri),B.rj.vadd(n,B.rj),B.rj.vsub(a.position,B.rj),this.result.push(B),this.createFrictionEquationsFromContact(B,this.frictionResult)}}h.release(P,q,O,E,T)}planeBox(t,e,s,n,i,o,r,a,l,d,u){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,e.convexPolyhedronRepresentation.id=e.id,this.planeConvex(t,e.convexPolyhedronRepresentation,s,n,i,o,r,a,t,e,u)}convexConvex(t,e,s,n,i,o,r,a,l,d,u,h,f){const p=ni;if(!(s.distanceTo(n)>t.boundingSphereRadius+e.boundingSphereRadius)&&t.findSeparatingAxis(e,s,i,n,o,p,h,f)){const y=[],v=ii;t.clipAgainstHull(s,i,e,n,o,p,-100,100,y);let w=0;for(let m=0;m!==y.length;m++){if(u)return!0;const x=this.createContactEquation(r,a,t,e,l,d),g=x.ri,b=x.rj;p.negate(x.ni),y[m].normal.negate(v),v.scale(y[m].depth,v),y[m].point.vadd(v,g),b.copy(y[m].point),g.vsub(s,g),b.vsub(n,b),g.vadd(s,g),g.vsub(r.position,g),b.vadd(n,b),b.vsub(a.position,b),this.result.push(x),w++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(x,this.frictionResult)}this.enableFrictionReduction&&w&&this.createFrictionFromAverage(w)}}sphereConvex(t,e,s,n,i,o,r,a,l,d,u){const h=this.v3pool;s.vsub(n,Gn);const f=e.faceNormals,p=e.faces,y=e.vertices,v=t.radius;let w=!1;for(let m=0;m!==y.length;m++){const x=y[m],g=$n;o.vmult(x,g),n.vadd(g,g);const b=Yn;if(g.vsub(s,b),b.lengthSquared()<v*v){if(u)return!0;w=!0;const z=this.createContactEquation(r,a,t,e,l,d);z.ri.copy(b),z.ri.normalize(),z.ni.copy(z.ri),z.ri.scale(v,z.ri),g.vsub(n,z.rj),z.ri.vadd(s,z.ri),z.ri.vsub(r.position,z.ri),z.rj.vadd(n,z.rj),z.rj.vsub(a.position,z.rj),this.result.push(z),this.createFrictionEquationsFromContact(z,this.frictionResult);return}}for(let m=0,x=p.length;m!==x&&w===!1;m++){const g=f[m],b=p[m],z=Un;o.vmult(g,z);const I=Xn;o.vmult(y[b[0]],I),I.vadd(n,I);const F=Kn;z.scale(-v,F),s.vadd(F,F);const R=Zn;F.vsub(I,R);const P=R.dot(z),q=Jn;if(s.vsub(I,q),P<0&&q.dot(z)>0){const O=[];for(let E=0,T=b.length;E!==T;E++){const S=h.get();o.vmult(y[b[E]],S),n.vadd(S,S),O.push(S)}if(Rn(O,z,s)){if(u)return!0;w=!0;const E=this.createContactEquation(r,a,t,e,l,d);z.scale(-v,E.ri),z.negate(E.ni);const T=h.get();z.scale(-P,T);const S=h.get();z.scale(-v,S),s.vsub(n,E.rj),E.rj.vadd(S,E.rj),E.rj.vadd(T,E.rj),E.rj.vadd(n,E.rj),E.rj.vsub(a.position,E.rj),E.ri.vadd(s,E.ri),E.ri.vsub(r.position,E.ri),h.release(T),h.release(S),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult);for(let C=0,D=O.length;C!==D;C++)h.release(O[C]);return}else for(let E=0;E!==b.length;E++){const T=h.get(),S=h.get();o.vmult(y[b[(E+1)%b.length]],T),o.vmult(y[b[(E+2)%b.length]],S),n.vadd(T,T),n.vadd(S,S);const C=Dn;S.vsub(T,C);const D=Hn;C.unit(D);const L=h.get(),k=h.get();s.vsub(T,k);const tt=k.dot(D);D.scale(tt,L),L.vadd(T,L);const Z=h.get();if(L.vsub(s,Z),tt>0&&tt*tt<C.lengthSquared()&&Z.lengthSquared()<v*v){if(u)return!0;const B=this.createContactEquation(r,a,t,e,l,d);L.vsub(n,B.rj),L.vsub(s,B.ni),B.ni.normalize(),B.ni.scale(v,B.ri),B.rj.vadd(n,B.rj),B.rj.vsub(a.position,B.rj),B.ri.vadd(s,B.ri),B.ri.vsub(r.position,B.ri),this.result.push(B),this.createFrictionEquationsFromContact(B,this.frictionResult);for(let Nt=0,Zt=O.length;Nt!==Zt;Nt++)h.release(O[Nt]);h.release(T),h.release(S),h.release(L),h.release(Z),h.release(k);return}h.release(T),h.release(S),h.release(L),h.release(Z),h.release(k)}for(let E=0,T=O.length;E!==T;E++)h.release(O[E])}}}planeConvex(t,e,s,n,i,o,r,a,l,d,u){const h=Qn,f=ti;f.set(0,0,1),i.vmult(f,f);let p=0;const y=ei;for(let v=0;v!==e.vertices.length;v++)if(h.copy(e.vertices[v]),o.vmult(h,h),n.vadd(h,h),h.vsub(s,y),f.dot(y)<=0){if(u)return!0;const m=this.createContactEquation(r,a,t,e,l,d),x=si;f.scale(f.dot(y),x),h.vsub(x,x),x.vsub(s,m.ri),m.ni.copy(f),h.vsub(n,m.rj),m.ri.vadd(s,m.ri),m.ri.vsub(r.position,m.ri),m.rj.vadd(n,m.rj),m.rj.vsub(a.position,m.rj),this.result.push(m),p++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(m,this.frictionResult)}this.enableFrictionReduction&&p&&this.createFrictionFromAverage(p)}boxConvex(t,e,s,n,i,o,r,a,l,d,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(t.convexPolyhedronRepresentation,e,s,n,i,o,r,a,t,e,u)}sphereHeightfield(t,e,s,n,i,o,r,a,l,d,u){const h=e.data,f=t.radius,p=e.elementSize,y=yi,v=mi;V.pointToLocalFrame(n,o,s,v);let w=Math.floor((v.x-f)/p)-1,m=Math.ceil((v.x+f)/p)+1,x=Math.floor((v.y-f)/p)-1,g=Math.ceil((v.y+f)/p)+1;if(m<0||g<0||w>h.length||x>h[0].length)return;w<0&&(w=0),m<0&&(m=0),x<0&&(x=0),g<0&&(g=0),w>=h.length&&(w=h.length-1),m>=h.length&&(m=h.length-1),g>=h[0].length&&(g=h[0].length-1),x>=h[0].length&&(x=h[0].length-1);const b=[];e.getRectMinMax(w,x,m,g,b);const z=b[0],I=b[1];if(v.z-f>I||v.z+f<z)return;const F=this.result;for(let R=w;R<m;R++)for(let P=x;P<g;P++){const q=F.length;let O=!1;if(e.getConvexTrianglePillar(R,P,!1),V.pointToWorldFrame(n,o,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(O=this.sphereConvex(t,e.pillarConvex,s,y,i,o,r,a,t,e,u)),u&&O||(e.getConvexTrianglePillar(R,P,!0),V.pointToWorldFrame(n,o,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(O=this.sphereConvex(t,e.pillarConvex,s,y,i,o,r,a,t,e,u)),u&&O))return!0;if(F.length-q>2)return}}boxHeightfield(t,e,s,n,i,o,r,a,l,d,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexHeightfield(t.convexPolyhedronRepresentation,e,s,n,i,o,r,a,t,e,u)}convexHeightfield(t,e,s,n,i,o,r,a,l,d,u){const h=e.data,f=e.elementSize,p=t.boundingSphereRadius,y=pi,v=fi,w=ui;V.pointToLocalFrame(n,o,s,w);let m=Math.floor((w.x-p)/f)-1,x=Math.ceil((w.x+p)/f)+1,g=Math.floor((w.y-p)/f)-1,b=Math.ceil((w.y+p)/f)+1;if(x<0||b<0||m>h.length||g>h[0].length)return;m<0&&(m=0),x<0&&(x=0),g<0&&(g=0),b<0&&(b=0),m>=h.length&&(m=h.length-1),x>=h.length&&(x=h.length-1),b>=h[0].length&&(b=h[0].length-1),g>=h[0].length&&(g=h[0].length-1);const z=[];e.getRectMinMax(m,g,x,b,z);const I=z[0],F=z[1];if(!(w.z-p>F||w.z+p<I))for(let R=m;R<x;R++)for(let P=g;P<b;P++){let q=!1;if(e.getConvexTrianglePillar(R,P,!1),V.pointToWorldFrame(n,o,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(q=this.convexConvex(t,e.pillarConvex,s,y,i,o,r,a,null,null,u,v,null)),u&&q||(e.getConvexTrianglePillar(R,P,!0),V.pointToWorldFrame(n,o,e.pillarOffset,y),s.distanceTo(y)<e.pillarConvex.boundingSphereRadius+t.boundingSphereRadius&&(q=this.convexConvex(t,e.pillarConvex,s,y,i,o,r,a,null,null,u,v,null)),u&&q))return!0}}sphereParticle(t,e,s,n,i,o,r,a,l,d,u){const h=ai;if(h.set(0,0,1),n.vsub(s,h),h.lengthSquared()<=t.radius*t.radius){if(u)return!0;const p=this.createContactEquation(a,r,e,t,l,d);h.normalize(),p.rj.copy(h),p.rj.scale(t.radius,p.rj),p.ni.copy(h),p.ni.negate(p.ni),p.ri.set(0,0,0),this.result.push(p),this.createFrictionEquationsFromContact(p,this.frictionResult)}}planeParticle(t,e,s,n,i,o,r,a,l,d,u){const h=oi;h.set(0,0,1),r.quaternion.vmult(h,h);const f=ri;if(n.vsub(r.position,f),h.dot(f)<=0){if(u)return!0;const y=this.createContactEquation(a,r,e,t,l,d);y.ni.copy(h),y.ni.negate(y.ni),y.ri.set(0,0,0);const v=ci;h.scale(h.dot(n),v),n.vsub(v,v),y.rj.copy(v),this.result.push(y),this.createFrictionEquationsFromContact(y,this.frictionResult)}}boxParticle(t,e,s,n,i,o,r,a,l,d,u){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexParticle(t.convexPolyhedronRepresentation,e,s,n,i,o,r,a,t,e,u)}convexParticle(t,e,s,n,i,o,r,a,l,d,u){let h=-1;const f=hi,p=di;let y=null;const v=li;if(v.copy(n),v.vsub(s,v),i.conjugate(je),je.vmult(v,v),t.pointIsInside(v)){t.worldVerticesNeedsUpdate&&t.computeWorldVertices(s,i),t.worldFaceNormalsNeedsUpdate&&t.computeWorldFaceNormals(i);for(let w=0,m=t.faces.length;w!==m;w++){const x=[t.worldVertices[t.faces[w][0]]],g=t.worldFaceNormals[w];n.vsub(x[0],We);const b=-g.dot(We);if(y===null||Math.abs(b)<Math.abs(y)){if(u)return!0;y=b,h=w,f.copy(g)}}if(h!==-1){const w=this.createContactEquation(a,r,e,t,l,d);f.scale(y,p),p.vadd(n,p),p.vsub(s,p),w.rj.copy(p),f.negate(w.ni),w.ri.set(0,0,0);const m=w.ri,x=w.rj;m.vadd(n,m),m.vsub(a.position,m),x.vadd(s,x),x.vsub(r.position,x),this.result.push(w),this.createFrictionEquationsFromContact(w,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(t,e,s,n,i,o,r,a,l,d,u){return this.convexHeightfield(e,t,n,s,o,i,a,r,l,d,u)}particleCylinder(t,e,s,n,i,o,r,a,l,d,u){return this.convexParticle(e,t,n,s,o,i,a,r,l,d,u)}sphereTrimesh(t,e,s,n,i,o,r,a,l,d,u){const h=gn,f=bn,p=En,y=Cn,v=zn,w=Mn,m=In,x=xn,g=vn,b=Nn;V.pointToLocalFrame(n,o,s,v);const z=t.radius;m.lowerBound.set(v.x-z,v.y-z,v.z-z),m.upperBound.set(v.x+z,v.y+z,v.z+z),e.getTrianglesInAABB(m,b);const I=wn,F=t.radius*t.radius;for(let E=0;E<b.length;E++)for(let T=0;T<3;T++)if(e.getVertex(e.indices[b[E]*3+T],I),I.vsub(v,g),g.lengthSquared()<=F){if(x.copy(I),V.pointToWorldFrame(n,o,x,I),I.vsub(s,g),u)return!0;let S=this.createContactEquation(r,a,t,e,l,d);S.ni.copy(g),S.ni.normalize(),S.ri.copy(S.ni),S.ri.scale(t.radius,S.ri),S.ri.vadd(s,S.ri),S.ri.vsub(r.position,S.ri),S.rj.copy(I),S.rj.vsub(a.position,S.rj),this.result.push(S),this.createFrictionEquationsFromContact(S,this.frictionResult)}for(let E=0;E<b.length;E++)for(let T=0;T<3;T++){e.getVertex(e.indices[b[E]*3+T],h),e.getVertex(e.indices[b[E]*3+(T+1)%3],f),f.vsub(h,p),v.vsub(f,w);const S=w.dot(p);v.vsub(h,w);let C=w.dot(p);if(C>0&&S<0&&(v.vsub(h,w),y.copy(p),y.normalize(),C=w.dot(y),y.scale(C,w),w.vadd(h,w),w.distanceTo(v)<t.radius)){if(u)return!0;const L=this.createContactEquation(r,a,t,e,l,d);w.vsub(v,L.ni),L.ni.normalize(),L.ni.scale(t.radius,L.ri),L.ri.vadd(s,L.ri),L.ri.vsub(r.position,L.ri),V.pointToWorldFrame(n,o,w,w),w.vsub(a.position,L.rj),V.vectorToWorldFrame(o,L.ni,L.ni),V.vectorToWorldFrame(o,L.ri,L.ri),this.result.push(L),this.createFrictionEquationsFromContact(L,this.frictionResult)}}const R=Sn,P=An,q=Tn,O=yn;for(let E=0,T=b.length;E!==T;E++){e.getTriangleVertices(b[E],R,P,q),e.getNormal(b[E],O),v.vsub(R,w);let S=w.dot(O);if(O.scale(S,w),v.vsub(w,w),S=w.distanceTo(v),Y.pointInTriangle(w,R,P,q)&&S<t.radius){if(u)return!0;let C=this.createContactEquation(r,a,t,e,l,d);w.vsub(v,C.ni),C.ni.normalize(),C.ni.scale(t.radius,C.ri),C.ri.vadd(s,C.ri),C.ri.vsub(r.position,C.ri),V.pointToWorldFrame(n,o,w,w),w.vsub(a.position,C.rj),V.vectorToWorldFrame(o,C.ni,C.ni),V.vectorToWorldFrame(o,C.ri,C.ri),this.result.push(C),this.createFrictionEquationsFromContact(C,this.frictionResult)}}b.length=0}planeTrimesh(t,e,s,n,i,o,r,a,l,d,u){const h=new c,f=pn;f.set(0,0,1),i.vmult(f,f);for(let p=0;p<e.vertices.length/3;p++){e.getVertex(p,h);const y=new c;y.copy(h),V.pointToWorldFrame(n,o,y,h);const v=fn;if(h.vsub(s,v),f.dot(v)<=0){if(u)return!0;const m=this.createContactEquation(r,a,t,e,l,d);m.ni.copy(f);const x=mn;f.scale(v.dot(f),x),h.vsub(x,x),m.ri.copy(x),m.ri.vsub(r.position,m.ri),m.rj.copy(h),m.rj.vsub(a.position,m.rj),this.result.push(m),this.createFrictionEquationsFromContact(m,this.frictionResult)}}}}const zt=new c,St=new c,At=new c,ln=new c,hn=new c,dn=new H,un=new H,pn=new c,fn=new c,mn=new c,yn=new c,vn=new c;new c;const wn=new c,xn=new c,gn=new c,bn=new c,En=new c,Cn=new c,zn=new c,Mn=new c,Sn=new c,An=new c,Tn=new c,In=new et,Nn=[],Yt=new c,Ve=new c,Pn=new c,Fn=new c,Bn=new c;function Rn(M,t,e){let s=null;const n=M.length;for(let i=0;i!==n;i++){const o=M[i],r=Pn;M[(i+1)%n].vsub(o,r);const a=Fn;r.cross(t,a);const l=Bn;e.vsub(o,l);const d=a.dot(l);if(s===null||d>0&&s===!0||d<=0&&s===!1){s===null&&(s=d>0);continue}else return!1}return!0}const $t=new c,qn=new c,_n=new c,Ln=new c,On=[new c,new c,new c,new c,new c,new c],kn=new c,Vn=new c,jn=new c,Wn=new c,Gn=new c,Dn=new c,Hn=new c,Yn=new c,$n=new c,Un=new c,Xn=new c,Kn=new c,Zn=new c,Jn=new c;new c,new c;const Qn=new c,ti=new c,ei=new c,si=new c,ni=new c,ii=new c,oi=new c,ri=new c,ci=new c,ai=new c,je=new H,li=new c;new c;const hi=new c,We=new c,di=new c,ui=new c,pi=new c,fi=[0],mi=new c,yi=new c;class Ge{constructor(){this.current=[],this.previous=[]}getKey(t,e){if(e<t){const s=e;e=t,t=s}return t<<16|e}set(t,e){const s=this.getKey(t,e),n=this.current;let i=0;for(;s>n[i];)i++;if(s!==n[i]){for(let o=n.length-1;o>=i;o--)n[o+1]=n[o];n[i]=s}}tick(){const t=this.current;this.current=this.previous,this.previous=t,this.current.length=0}getDiff(t,e){const s=this.current,n=this.previous,i=s.length,o=n.length;let r=0;for(let a=0;a<i;a++){let l=!1;const d=s[a];for(;d>n[r];)r++;l=d===n[r],l||De(t,d)}r=0;for(let a=0;a<o;a++){let l=!1;const d=n[a];for(;d>s[r];)r++;l=s[r]===d,l||De(e,d)}}}function De(M,t){M.push((t&4294901760)>>16,t&65535)}const re=(M,t)=>M<t?`${M}-${t}`:`${t}-${M}`;class vi{constructor(){this.data={keys:[]}}get(t,e){const s=re(t,e);return this.data[s]}set(t,e,s){const n=re(t,e);this.get(t,e)||this.data.keys.push(n),this.data[n]=s}delete(t,e){const s=re(t,e),n=this.data.keys.indexOf(s);n!==-1&&this.data.keys.splice(n,1),delete this.data[s]}reset(){const t=this.data,e=t.keys;for(;e.length>0;){const s=e.pop();delete t[s]}}}class wi extends xe{constructor(t){t===void 0&&(t={}),super(),this.dt=-1,this.allowSleep=!!t.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=t.quatNormalizeSkip!==void 0?t.quatNormalizeSkip:0,this.quatNormalizeFast=t.quatNormalizeFast!==void 0?t.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new c,t.gravity&&this.gravity.copy(t.gravity),t.frictionGravity&&(this.frictionGravity=new c,this.frictionGravity.copy(t.frictionGravity)),this.broadphase=t.broadphase!==void 0?t.broadphase:new Ss,this.bodies=[],this.hasActiveBodies=!1,this.solver=t.solver!==void 0?t.solver:new en,this.constraints=[],this.narrowphase=new an(this),this.collisionMatrix=new we,this.collisionMatrixPrevious=new we,this.bodyOverlapKeeper=new Ge,this.shapeOverlapKeeper=new Ge,this.contactmaterials=[],this.contactMaterialTable=new vi,this.defaultMaterial=new Rt("default"),this.defaultContactMaterial=new Bt(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(t,e){return this.contactMaterialTable.get(t.id,e.id)}collisionMatrixTick(){const t=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=t,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(t){this.constraints.push(t)}removeConstraint(t){const e=this.constraints.indexOf(t);e!==-1&&this.constraints.splice(e,1)}rayTest(t,e,s){s instanceof jt?this.raycastClosest(t,e,{skipBackfaces:!0},s):this.raycastAll(t,e,{skipBackfaces:!0},s)}raycastAll(t,e,s,n){return s===void 0&&(s={}),s.mode=Y.ALL,s.from=t,s.to=e,s.callback=n,ce.intersectWorld(this,s)}raycastAny(t,e,s,n){return s===void 0&&(s={}),s.mode=Y.ANY,s.from=t,s.to=e,s.result=n,ce.intersectWorld(this,s)}raycastClosest(t,e,s,n){return s===void 0&&(s={}),s.mode=Y.CLOSEST,s.from=t,s.to=e,s.result=n,ce.intersectWorld(this,s)}addBody(t){this.bodies.includes(t)||(t.index=this.bodies.length,this.bodies.push(t),t.world=this,t.initPosition.copy(t.position),t.initVelocity.copy(t.velocity),t.timeLastSleepy=this.time,t instanceof A&&(t.initAngularVelocity.copy(t.angularVelocity),t.initQuaternion.copy(t.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=t,this.idToBodyMap[t.id]=t,this.dispatchEvent(this.addBodyEvent))}removeBody(t){t.world=null;const e=this.bodies.length-1,s=this.bodies,n=s.indexOf(t);if(n!==-1){s.splice(n,1);for(let i=0;i!==s.length;i++)s[i].index=i;this.collisionMatrix.setNumObjects(e),this.removeBodyEvent.body=t,delete this.idToBodyMap[t.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(t){return this.idToBodyMap[t]}getShapeById(t){const e=this.bodies;for(let s=0;s<e.length;s++){const n=e[s].shapes;for(let i=0;i<n.length;i++){const o=n[i];if(o.id===t)return o}}return null}addContactMaterial(t){this.contactmaterials.push(t),this.contactMaterialTable.set(t.materials[0].id,t.materials[1].id,t)}removeContactMaterial(t){const e=this.contactmaterials.indexOf(t);e!==-1&&(this.contactmaterials.splice(e,1),this.contactMaterialTable.delete(t.materials[0].id,t.materials[1].id))}fixedStep(t,e){t===void 0&&(t=1/60),e===void 0&&(e=10);const s=$.now()/1e3;if(!this.lastCallTime)this.step(t,void 0,e);else{const n=s-this.lastCallTime;this.step(t,n,e)}this.lastCallTime=s}step(t,e,s){if(s===void 0&&(s=10),e===void 0)this.internalStep(t),this.time+=t;else{this.accumulator+=e;const n=$.now();let i=0;for(;this.accumulator>=t&&i<s&&(this.internalStep(t),this.accumulator-=t,i++,!($.now()-n>t*1e3)););this.accumulator=this.accumulator%t;const o=this.accumulator/t;for(let r=0;r!==this.bodies.length;r++){const a=this.bodies[r];a.previousPosition.lerp(a.position,o,a.interpolatedPosition),a.previousQuaternion.slerp(a.quaternion,o,a.interpolatedQuaternion),a.previousQuaternion.normalize()}this.time+=e}}internalStep(t){this.dt=t;const e=this.contacts,s=Ci,n=zi,i=this.bodies.length,o=this.bodies,r=this.solver,a=this.gravity,l=this.doProfiling,d=this.profile,u=A.DYNAMIC;let h=-1/0;const f=this.constraints,p=Ei;a.length();const y=a.x,v=a.y,w=a.z;let m=0;for(l&&(h=$.now()),m=0;m!==i;m++){const E=o[m];if(E.type===u){const T=E.force,S=E.mass;T.x+=S*y,T.y+=S*v,T.z+=S*w}}for(let E=0,T=this.subsystems.length;E!==T;E++)this.subsystems[E].update();l&&(h=$.now()),s.length=0,n.length=0,this.broadphase.collisionPairs(this,s,n),l&&(d.broadphase=$.now()-h);let x=f.length;for(m=0;m!==x;m++){const E=f[m];if(!E.collideConnected)for(let T=s.length-1;T>=0;T-=1)(E.bodyA===s[T]&&E.bodyB===n[T]||E.bodyB===s[T]&&E.bodyA===n[T])&&(s.splice(T,1),n.splice(T,1))}this.collisionMatrixTick(),l&&(h=$.now());const g=bi,b=e.length;for(m=0;m!==b;m++)g.push(e[m]);e.length=0;const z=this.frictionEquations.length;for(m=0;m!==z;m++)p.push(this.frictionEquations[m]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(s,n,this,e,g,this.frictionEquations,p),l&&(d.narrowphase=$.now()-h),l&&(h=$.now()),m=0;m<this.frictionEquations.length;m++)r.addEquation(this.frictionEquations[m]);const I=e.length;for(let E=0;E!==I;E++){const T=e[E],S=T.bi,C=T.bj,D=T.si,L=T.sj;let k;if(S.material&&C.material?k=this.getContactMaterial(S.material,C.material)||this.defaultContactMaterial:k=this.defaultContactMaterial,k.friction,S.material&&C.material&&(S.material.friction>=0&&C.material.friction>=0&&S.material.friction*C.material.friction,S.material.restitution>=0&&C.material.restitution>=0&&(T.restitution=S.material.restitution*C.material.restitution)),r.addEquation(T),S.allowSleep&&S.type===A.DYNAMIC&&S.sleepState===A.SLEEPING&&C.sleepState===A.AWAKE&&C.type!==A.STATIC){const tt=C.velocity.lengthSquared()+C.angularVelocity.lengthSquared(),Z=C.sleepSpeedLimit**2;tt>=Z*2&&(S.wakeUpAfterNarrowphase=!0)}if(C.allowSleep&&C.type===A.DYNAMIC&&C.sleepState===A.SLEEPING&&S.sleepState===A.AWAKE&&S.type!==A.STATIC){const tt=S.velocity.lengthSquared()+S.angularVelocity.lengthSquared(),Z=S.sleepSpeedLimit**2;tt>=Z*2&&(C.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(S,C,!0),this.collisionMatrixPrevious.get(S,C)||(qt.body=C,qt.contact=T,S.dispatchEvent(qt),qt.body=S,C.dispatchEvent(qt)),this.bodyOverlapKeeper.set(S.id,C.id),this.shapeOverlapKeeper.set(D.id,L.id)}for(this.emitContactEvents(),l&&(d.makeContactConstraints=$.now()-h,h=$.now()),m=0;m!==i;m++){const E=o[m];E.wakeUpAfterNarrowphase&&(E.wakeUp(),E.wakeUpAfterNarrowphase=!1)}for(x=f.length,m=0;m!==x;m++){const E=f[m];E.update();for(let T=0,S=E.equations.length;T!==S;T++){const C=E.equations[T];r.addEquation(C)}}r.solve(t,this),l&&(d.solve=$.now()-h),r.removeAllEquations();const F=Math.pow;for(m=0;m!==i;m++){const E=o[m];if(E.type&u){const T=F(1-E.linearDamping,t),S=E.velocity;S.scale(T,S);const C=E.angularVelocity;if(C){const D=F(1-E.angularDamping,t);C.scale(D,C)}}}this.dispatchEvent(gi),l&&(h=$.now());const P=this.stepnumber%(this.quatNormalizeSkip+1)===0,q=this.quatNormalizeFast;for(m=0;m!==i;m++)o[m].integrate(t,P,q);this.clearForces(),this.broadphase.dirty=!0,l&&(d.integrate=$.now()-h),this.stepnumber+=1,this.dispatchEvent(xi);let O=!0;if(this.allowSleep)for(O=!1,m=0;m!==i;m++){const E=o[m];E.sleepTick(this.time),E.sleepState!==A.SLEEPING&&(O=!0)}this.hasActiveBodies=O}emitContactEvents(){const t=this.hasAnyEventListener("beginContact"),e=this.hasAnyEventListener("endContact");if((t||e)&&this.bodyOverlapKeeper.getDiff(pt,ft),t){for(let i=0,o=pt.length;i<o;i+=2)_t.bodyA=this.getBodyById(pt[i]),_t.bodyB=this.getBodyById(pt[i+1]),this.dispatchEvent(_t);_t.bodyA=_t.bodyB=null}if(e){for(let i=0,o=ft.length;i<o;i+=2)Lt.bodyA=this.getBodyById(ft[i]),Lt.bodyB=this.getBodyById(ft[i+1]),this.dispatchEvent(Lt);Lt.bodyA=Lt.bodyB=null}pt.length=ft.length=0;const s=this.hasAnyEventListener("beginShapeContact"),n=this.hasAnyEventListener("endShapeContact");if((s||n)&&this.shapeOverlapKeeper.getDiff(pt,ft),s){for(let i=0,o=pt.length;i<o;i+=2){const r=this.getShapeById(pt[i]),a=this.getShapeById(pt[i+1]);mt.shapeA=r,mt.shapeB=a,r&&(mt.bodyA=r.body),a&&(mt.bodyB=a.body),this.dispatchEvent(mt)}mt.bodyA=mt.bodyB=mt.shapeA=mt.shapeB=null}if(n){for(let i=0,o=ft.length;i<o;i+=2){const r=this.getShapeById(ft[i]),a=this.getShapeById(ft[i+1]);yt.shapeA=r,yt.shapeB=a,r&&(yt.bodyA=r.body),a&&(yt.bodyB=a.body),this.dispatchEvent(yt)}yt.bodyA=yt.bodyB=yt.shapeA=yt.shapeB=null}}clearForces(){const t=this.bodies,e=t.length;for(let s=0;s!==e;s++){const n=t[s];n.force,n.torque,n.force.set(0,0,0),n.torque.set(0,0,0)}}}new et;const ce=new Y,$=globalThis.performance||{};if(!$.now){let M=Date.now();$.timing&&$.timing.navigationStart&&(M=$.timing.navigationStart),$.now=()=>Date.now()-M}new c;const xi={type:"postStep"},gi={type:"preStep"},qt={type:A.COLLIDE_EVENT_NAME,body:null,contact:null},bi=[],Ei=[],Ci=[],zi=[],pt=[],ft=[],_t={type:"beginContact",bodyA:null,bodyB:null},Lt={type:"endContact",bodyA:null,bodyB:null},mt={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},yt={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};let j,vt;const ht={COILER:1,ROPE:2,ROPE_SEGMENT:4,ANCHOR:8};let Ut=40,He=.012,Mi=.25,ae=.012,_=[],X,st,J,G,dt,ut,Ot=10,kt=0,le=1,gt=0,Tt=!1,Ye=400,Si=0,Ai=0,Ti=0,Vt=0,It=new Set,$e=[],he=0,wt=null,K="100-10";const Xt=1/60,Ue=4,Ii={"100-10":Math.PI/18,"100-99":Math.PI/14.76,"100-200":Math.PI/10.005},de=1,ue=Math.PI/2,Xe=.85,Ni=5;let Ke=new Map,bt=0,it=0,nt=new Map;function Pi(){j=new wi({gravity:new c(0,-9.81,0)}),vt=new Rt("defaultMaterial"),j.defaultContactMaterial=new Bt(vt,vt,{friction:.8,restitution:.01,contactEquationStiffness:5e5,contactEquationRelaxation:5,frictionEquationStiffness:5e5*1.5,frictionEquationRelaxation:5}),j.defaultMaterial=vt,X=new A({mass:0}),X.position.set(.57,.225,.025),X.type=U.KINEMATIC,j.addBody(X),st=new A({mass:0}),st.position.set(-.6,.27,-.058),j.addBody(st),J=new A({mass:0}),J.position.set(0,.3,.03),j.addBody(J),$e=[],It=new Set}function Fi(){Ze();for(let s=0;s<Ut;s++){const n=new oe(He/2);let i,o,r;if(s<=Ot){const l=s/Ot;i=st.position.x+l*(J.position.x-st.position.x),o=st.position.y+l*(J.position.y-st.position.y),r=st.position.z+l*(J.position.z-st.position.z),o+=Math.sin(l*Math.PI)*.05}else{const l=(s-Ot)/(Ut-Ot-1);i=J.position.x+l*(X.position.x-J.position.x),o=J.position.y+l*(X.position.y-J.position.y),r=J.position.z+l*(X.position.z-X.position.z),o+=Math.sin(l*Math.PI)*.05}const a=new A({mass:Mi,shape:n,position:new c(i,o,r),material:vt,collisionFilterGroup:ht.ROPE|ht.ROPE_SEGMENT,collisionFilterMask:ht.COILER|ht.ROPE_SEGMENT});a.angularDamping=.97,a.linearDamping=.97,j.addBody(a),_.push(a)}for(let s=0;s<Ut-1;s++){const n=new Ct(_[s],_[s+1],ae,1e5);n.collideConnected=!1,n.maxForce=1e3,j.addConstraint(n)}const M=new Ct(J,_[Ot],0);j.addConstraint(M);const t=new Ct(st,_[0],0);j.addConstraint(t);const e=new Ct(X,_[Ut-1],0);j.addConstraint(e)}function Ze(M=!1){var t;try{Tt=!1,he=0,bt=0,it=0,nt?nt.clear():nt=new Map,Ke.clear();for(let e=((t=j==null?void 0:j.constraints)==null?void 0:t.length)-1;e>=0;e--)j.constraints[e]instanceof Ct&&j.removeConstraint(j.constraints[e]);for(let e=0;e<_.length;e++)j.removeBody(_[e]);_.length=0,kt=0,le=1,gt=0,Si=0,Ai=0,M&&(Ti=0,Vt=0),$e=[],It.clear()}catch(e){console.error("Error in resetRope:",e)}}function Bi(M,t,e,s,n){const i=Xt,o=Ue;bt+=i,he++;const r=s*i;it===void 0&&(it=0),it+=r;for(let l=0;l<o;l++)j.step(i/o);Ri(s),qi(),Je(r);const a=Ii[K]||Math.PI/12;return Math.abs(it-Vt)>=a&&_i(wt,K,e,it)&&(Vt=it,console.log(`Added segment for ${K} at angle: ${it.toFixed(3)} radians (${(it*180/Math.PI).toFixed(1)}°), increment: ${a.toFixed(4)}`)),{positions:Kt(),segmentCount:_.length,staticCount:It.size,simulationTime:bt,rotationAngle:it}}function Ri(M){if(!G||Tt)return;const t=wt==null?void 0:wt[K];if(!t)return;const e=t.radius,s=G.position,n=Math.sign(M);for(let i=0;i<_.length;i++){const o=_[i];if(!o||o.type===U.STATIC)continue;const r=s.x-o.position.x,a=s.y-o.position.y,l=Math.sqrt(r*r+a*a),d=e*3;if(l>d)continue;const u=r/l,h=a/l,f=-h,p=u;let y=.01;if(i%de!==0){const b=i%de;y=.01+Math.sin(b/de*Math.PI)*.02}const v=e+y,w=l-v;let m;Math.abs(w)>.1?m=14:m=8;const x=w*m;o.applyForce(new c(u*x,h*x,0),new c(0,0,0));const g=Math.abs(M)*5;o.applyForce(new c(f*g*n,p*g*n,0),new c(0,0,0)),nt.has(i)?(o.velocity.scale(Xe),o.angularVelocity.scale(Xe)):Math.abs(w)<.1&&(o.velocity.scale(.9),o.angularVelocity.scale(.9))}}function qi(){var n;if(!G||Tt)return;nt||(nt=new Map);const M=wt==null?void 0:wt[K];if(!M)return;const t=M.radius,e=G.position,s=G.angularVelocity.z;for(const[i,o]of nt.entries()){const r=_[i];if(!r||r.type===U.STATIC){nt.delete(i);continue}if(o.accumulatedRotation+=Math.abs(s*Xt),he%60===0&&console.log(`Segment ${i} rotation: ${o.accumulatedRotation.toFixed(3)}/${ue}`),o.accumulatedRotation>=ue){const b=Math.min(1,o.accumulatedRotation/ue);if(b>.8){const z=r.position.x-e.x,I=r.position.y-e.y,F=Math.atan2(I,z),R=(b-.8)*5,P=e.x+t*Math.cos(F),q=e.y+t*Math.sin(F);r.position.x=r.position.x*(1-R)+P*R,r.position.y=r.position.y*(1-R)+q*R,r.velocity.scale(.7),r.angularVelocity.scale(.7)}if(b>=1){const z=Li(i);console.log(`Segment ${i} completed π/2 rotation: static=${z}`),nt.delete(i)}}const a=r.position.x-e.x,l=r.position.y-e.y,d=Math.sqrt(a*a+l*l),u=a/d,h=l/d,f=t+.01,y=(d-f)*Ni;r.applyForce(new c(u*y,h*y,0),new c(0,0,0));const v=-h,w=u,m=Math.abs(s)*4,x=Math.sign(s);r.applyForce(new c(v*m*x,w*m*x,0),new c(0,0,0));const g=.975;r.velocity.scale(g),r.angularVelocity.scale(g)}for(let i=_.length-1;i>=0;i--){const o=_[i];if(!o||o.type===U.STATIC||nt.has(i))continue;const r=o.position.x-e.x,a=o.position.y-e.y,l=Math.sqrt(r*r+a*a);if(Math.abs(l-t)<.04){nt.set(i,{contactStartTime:bt||0,accumulatedRotation:0}),o.velocity.scale(.8);for(let u=Math.max(0,i-3);u<Math.min(_.length,i+4);u++)if(u!==i&&!nt.has(u)&&((n=_[u])==null?void 0:n.type)!==U.STATIC){const h=_[u].position.x-e.x,f=_[u].position.y-e.y,p=Math.sqrt(h*h+f*f);Math.abs(p-t)<.08&&nt.set(u,{contactStartTime:bt||0,accumulatedRotation:0})}}}}function Je(M){var t;if(!(!G||M===0))for(let e=0;e<_.length;e++){const s=_[e];if(!s||s.type!==U.STATIC||!((t=s.userData)!=null&&t.coilerAttachment))continue;const n=s.userData.coilerAttachment;n.angle+=M,s.position.x=G.position.x+n.radius*Math.cos(n.angle),s.position.y=G.position.y+n.radius*Math.sin(n.angle),s.position.z=G.position.z+n.z}}function _i(M,t,e,s){const n=e||(t==="100-200"?300:400);if(_.length>=n||_.length<11)return!1;try{const i=_[10],o=_[11];if(!i||!o)return!1;const r=new A({mass:.35,shape:new oe(He/2),position:new c(i.position.x,i.position.y,i.position.z),material:vt,collisionFilterGroup:ht.ROPE|ht.ROPE_SEGMENT,collisionFilterMask:ht.COILER|ht.ROPE_SEGMENT}),a=kt;if(Ke.set(r.id,a),r.userData={creationAngle:s,creationTime:bt||0,creationIndex:a},kt++,G){const f=G.position.x-i.position.x,p=G.position.y-i.position.y,v=Math.sqrt(f*f+p*p)>.5?.6:.4;r.velocity.set(f*v,p*v,0)}r.linearDamping=.85,r.angularDamping=.85,j.addBody(r),j.constraints.forEach(f=>{(f.bodyA===i&&f.bodyB===o||f.bodyA===o&&f.bodyB===i)&&j.removeConstraint(f)}),kt%30===0&&(le*=-1),gt||(gt=0);const l=M[t];if(l){const f=(l.sideOffset1-l.sideOffset2)*.8,p=Math.sin(s*.5)*.3;gt+=le*(f/50)*.9,gt+=p*.01;const y=f*.45;gt=Math.max(Math.min(gt,y),-y),r.position.z+=gt*.3}const d=_.slice(11);_.length=11,_.push(r),_.push(...d);const u=new Ct(i,r,ae,1e6),h=new Ct(r,_[12],ae,1e6);return u.collideConnected=!1,h.collideConnected=!1,u.maxForce=1e4,h.maxForce=1e4,j.addConstraint(u),j.addConstraint(h),console.log(`Created segment with index ${kt}`),!0}catch(i){return console.error("Error adding segment:",i),!1}}function Li(M){const t=_[M];if(!t||t.type===U.STATIC)return!1;try{t.type=U.STATIC,t.mass=0,t.updateMassProperties(),t.velocity.set(0,0,0),t.angularVelocity.set(0,0,0),t.force.set(0,0,0),t.torque.set(0,0,0);const e=t.position.x-G.position.x,s=t.position.y-G.position.y,n=Math.sqrt(e*e+s*s),i=Math.atan2(s,e);return t.userData.coilerAttachment={angle:i,radius:n,z:t.position.z-G.position.z},It.add(M),console.log(`Made segment ${M} static after π/2 rotation`),!0}catch(e){return console.error(`Error making segment ${M} static:`,e),!1}}function Kt(){return _.map(M=>!M||!M.position?null:{x:M.position.x,y:M.position.y,z:M.position.z}).filter(M=>M!==null)}function Oi(){Tt=!0;for(let M=0;M<_.length;M++){const t=_[M];t&&(t.type=U.STATIC,t.mass=0,t.updateMassProperties(),t.velocity.set(0,0,0),t.angularVelocity.set(0,0,0),t.force.set(0,0,0),t.torque.set(0,0,0),It.add(M))}X&&(X.type=U.STATIC,X.updateMassProperties()),st&&(st.type=U.STATIC,st.updateMassProperties()),J&&(J.type=U.STATIC,J.updateMassProperties())}function ki(M,t,e){if(!X)return;X.position.set(M,t,e),X.velocity.set(0,0,0),X.angularVelocity.set(0,0,0);const s=Math.min(10,_.length);for(let n=_.length-s;n<_.length;n++)_[n]&&(_[n].velocity.scale(.9),_[n].angularVelocity.scale(.9))}function Vi(M){G&&(G.angularVelocity.set(0,0,M),dt&&dt.angularVelocity.set(0,0,M),ut&&ut.angularVelocity.set(0,0,M))}function ji(M,t){const e=t&&K!==t;wt=M,K=t||K,e&&(it=0,Vt=0,console.log(`Coiler type changed to ${K}, reset angle tracking`));const s=M[K];if(!s)return console.error("Invalid coiler type:",K),null;const n=s.radius,i=s.height;G&&j.removeBody(G),G=new A({mass:0,type:U.KINEMATIC,material:vt,collisionFilterGroup:ht.COILER,collisionFilterMask:ht.ROPE});const o=new ke(n,n,i,16);G.addShape(o,new c(0,0,0),new H().setFromAxisAngle(new c(1,0,0),Math.PI/2));const r=n*.03,a=6;for(let l=0;l<32;l++){const d=l/32*Math.PI*2*a,u=l/32*i-i/2,h=n*.97*Math.cos(d),f=n*.97*Math.sin(d),p=new oe(r);G.addShape(p,new c(h,f,u))}return G.position.set(.57,.225,s.zOffset),j.addBody(G),G}function Wi(M,t){dt&&(j.removeBody(dt),dt=null),ut&&(j.removeBody(ut),ut=null);const e=M[K];if(!e)return null;const s=e.radius,n=e.height,i=K==="100-10"?2:K==="100-99"?2.1:2.2,o=new ke(s*i,s*i,n/10,16);return dt=new A({mass:0,type:U.KINEMATIC,shape:o,material:vt}),dt.position.set(.57,.225,e.sideOffset1),dt.quaternion.setFromEuler(Math.PI/2,0,0),j.addBody(dt),ut=new A({mass:0,type:U.KINEMATIC,shape:o,material:vt}),ut.position.set(.57,.225,e.sideOffset2),ut.quaternion.setFromEuler(Math.PI/2,0,0),j.addBody(ut),{side1:dt,side2:ut}}self.onmessage=function(M){try{const{type:t,data:e}=M.data;switch(t){case"init":Pi(),self.postMessage({type:"initialized"});break;case"resetRope":bt=0,it=0,Vt=0,Ze(e==null?void 0:e.resetAngle),Tt=!1,self.postMessage({type:"ropeReset"});break;case"createCoiler":wt=e.coilerConfig,K=e.activeCoilerType,Ye=K==="100-200"?300:400,ji(e.coilerConfig,e.activeCoilerType),Wi(e.coilerConfig,e.activeCoilerType),self.postMessage({type:"coilerCreated"});break;case"createRope":Fi();const s=Kt();self.postMessage({type:"ropeCreated",positions:s});break;case"step":if(Tt){e.rotationSpeed!==0&&Je(e.rotationSpeed*Xt),self.postMessage({type:"stepped",positions:Kt(),count:_.length,staticCount:It.size,simulationTime:bt});break}const n=Bi(Xt,Ue,Ye,e.rotationSpeed,e.rotationAngle);self.postMessage({type:"stepped",positions:n.positions,count:n.segmentCount,staticCount:n.staticCount,simulationTime:n.simulationTime,rotationAngle:n.rotationAngle});break;case"updateAnchor":ki(e.x,e.y,e.z);break;case"setRotation":Vi(e.rotationSpeed);break;case"finalizeRope":Oi(),self.postMessage({type:"ropeFinalized",positions:Kt()});break;default:break}}catch(t){console.error("Worker error:",t),self.postMessage({type:"error",error:t.toString()})}}})();
